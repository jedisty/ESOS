!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ADDRS_PER_BLOCK	./include/f2fs_fs.h	425;"	d
ADDRS_PER_INODE	./include/f2fs_fs.h	424;"	d
ALIGN	./include/f2fs_fs.h	790;"	d
ASCIIToUNICODE	./lib/libf2fs.c	/^void ASCIIToUNICODE(u_int16_t *out_buf, u_int8_t *in_buf)$/;"	f
ASSERT	./include/f2fs_fs.h	130;"	d
ASSERT_MSG	./include/f2fs_fs.h	123;"	d
BITS_PER_BYTE	./include/f2fs_fs.h	207;"	d
BITS_PER_LONG	./include/f2fs_fs.h	257;"	d
BITS_PER_LONG	./include/f2fs_fs.h	259;"	d
BIT_MASK	./include/f2fs_fs.h	262;"	d
BIT_WORD	./include/f2fs_fs.h	263;"	d
BLKOFF_FROM_MAIN	./fsck/f2fs.h	/^static inline u64 BLKOFF_FROM_MAIN(struct f2fs_sb_info *sbi, u64 blk_addr)$/;"	f
BLOCK_SZ	./fsck/fsck.h	54;"	d
BUF_DISP_u32	./include/f2fs_fs.h	185;"	d
BUF_DISP_u64	./include/f2fs_fs.h	193;"	d
BUF_DISP_utf	./include/f2fs_fs.h	201;"	d
BUF_SZ	./fsck/dump.c	16;"	d	file:
CHECKSUM_OFFSET	./include/f2fs_fs.h	209;"	d
COLD_BIT_SHIFT	./include/f2fs_fs.h	/^	COLD_BIT_SHIFT = 0,$/;"	e	enum:__anon3
CP_COMPACT_SUM_FLAG	./include/f2fs_fs.h	363;"	d
CP_ERROR_FLAG	./include/f2fs_fs.h	362;"	d
CP_FSCK_FLAG	./include/f2fs_fs.h	361;"	d
CP_ORPHAN_PRESENT_FLAG	./include/f2fs_fs.h	364;"	d
CP_UMOUNT_FLAG	./include/f2fs_fs.h	365;"	d
CRCPOLY_LE	./lib/libf2fs.c	316;"	d	file:
CURSEG_COLD_DATA	./include/f2fs_fs.h	/^	CURSEG_COLD_DATA,	\/* multimedia or GCed data blocks *\/$/;"	e	enum:__anon2
CURSEG_COLD_NODE	./include/f2fs_fs.h	/^	CURSEG_COLD_NODE,	\/* indirect node blocks *\/$/;"	e	enum:__anon2
CURSEG_HOT_DATA	./include/f2fs_fs.h	/^	CURSEG_HOT_DATA	= 0,	\/* directory entry blocks *\/$/;"	e	enum:__anon2
CURSEG_HOT_NODE	./include/f2fs_fs.h	/^	CURSEG_HOT_NODE,	\/* direct node blocks of directory files *\/$/;"	e	enum:__anon2
CURSEG_I	./fsck/f2fs.h	/^static inline struct curseg_info *CURSEG_I(struct f2fs_sb_info *sbi, int type)$/;"	f
CURSEG_WARM_DATA	./include/f2fs_fs.h	/^	CURSEG_WARM_DATA,	\/* data blocks *\/$/;"	e	enum:__anon2
CURSEG_WARM_NODE	./include/f2fs_fs.h	/^	CURSEG_WARM_NODE,	\/* direct node blocks of normal files *\/$/;"	e	enum:__anon2
DBG	./include/f2fs_fs.h	151;"	d
DEFAULT_BLOCKS_PER_SEGMENT	./include/f2fs_fs.h	216;"	d
DEFAULT_SECTORS_PER_BLOCK	./include/f2fs_fs.h	215;"	d
DEFAULT_SECTOR_SIZE	./include/f2fs_fs.h	214;"	d
DEFAULT_SEGMENTS_PER_SECTION	./include/f2fs_fs.h	217;"	d
DEF_ADDRS_PER_INODE	./include/f2fs_fs.h	423;"	d
DEF_DIR_LEVEL	./include/f2fs_fs.h	445;"	d
DELTA	./lib/libf2fs.c	218;"	d	file:
DENT_BIT_SHIFT	./include/f2fs_fs.h	/^	DENT_BIT_SHIFT,$/;"	e	enum:__anon3
DISP	./include/f2fs_fs.h	160;"	d
DISP_u32	./include/f2fs_fs.h	165;"	d
DISP_u64	./include/f2fs_fs.h	172;"	d
DISP_utf	./include/f2fs_fs.h	179;"	d
DUMP	./include/f2fs_fs.h	/^	DUMP,$/;"	e	enum:f2fs_config_func
ENTRIES_IN_SUM	./include/f2fs_fs.h	585;"	d
ERR_MSG	./include/f2fs_fs.h	139;"	d
EXIT_ERR_CODE	./fsck/f2fs.h	31;"	d
F2FS_BLKSIZE	./include/f2fs_fs.h	294;"	d
F2FS_BLK_ALIGN	./include/f2fs_fs.h	296;"	d
F2FS_CKPT	./fsck/f2fs.h	/^static inline struct f2fs_checkpoint *F2FS_CKPT(struct f2fs_sb_info *sbi)$/;"	f
F2FS_DATA_EXIST	./include/f2fs_fs.h	437;"	d
F2FS_DDOT_HASH	./include/f2fs_fs.h	669;"	d
F2FS_DOT_HASH	./include/f2fs_fs.h	668;"	d
F2FS_FSCK	./fsck/f2fs.h	/^static inline struct f2fs_fsck *F2FS_FSCK(struct f2fs_sb_info *sbi)$/;"	f
F2FS_FT_BLKDEV	./include/f2fs_fs.h	/^	F2FS_FT_BLKDEV,$/;"	e	enum:FILE_TYPE
F2FS_FT_CHRDEV	./include/f2fs_fs.h	/^	F2FS_FT_CHRDEV,$/;"	e	enum:FILE_TYPE
F2FS_FT_DIR	./include/f2fs_fs.h	/^	F2FS_FT_DIR,$/;"	e	enum:FILE_TYPE
F2FS_FT_FIFO	./include/f2fs_fs.h	/^	F2FS_FT_FIFO,$/;"	e	enum:FILE_TYPE
F2FS_FT_LAST_FILE_TYPE	./include/f2fs_fs.h	/^	F2FS_FT_LAST_FILE_TYPE = F2FS_FT_XATTR,$/;"	e	enum:FILE_TYPE
F2FS_FT_MAX	./include/f2fs_fs.h	/^	F2FS_FT_MAX,$/;"	e	enum:FILE_TYPE
F2FS_FT_ORPHAN	./include/f2fs_fs.h	/^	F2FS_FT_ORPHAN,$/;"	e	enum:FILE_TYPE
F2FS_FT_REG_FILE	./include/f2fs_fs.h	/^	F2FS_FT_REG_FILE,$/;"	e	enum:FILE_TYPE
F2FS_FT_SOCK	./include/f2fs_fs.h	/^	F2FS_FT_SOCK,$/;"	e	enum:FILE_TYPE
F2FS_FT_SYMLINK	./include/f2fs_fs.h	/^	F2FS_FT_SYMLINK,$/;"	e	enum:FILE_TYPE
F2FS_FT_UNKNOWN	./include/f2fs_fs.h	/^	F2FS_FT_UNKNOWN,$/;"	e	enum:FILE_TYPE
F2FS_FT_XATTR	./include/f2fs_fs.h	/^	F2FS_FT_XATTR,$/;"	e	enum:FILE_TYPE
F2FS_HASH_COL_BIT	./include/f2fs_fs.h	671;"	d
F2FS_INLINE_DATA	./include/f2fs_fs.h	435;"	d
F2FS_INLINE_DENTRY	./include/f2fs_fs.h	436;"	d
F2FS_INLINE_XATTR	./include/f2fs_fs.h	434;"	d
F2FS_INLINE_XATTR_ADDRS	./include/f2fs_fs.h	422;"	d
F2FS_LOG_SECTORS_PER_BLOCK	./include/f2fs_fs.h	293;"	d
F2FS_LOG_SECTOR_SIZE	./include/f2fs_fs.h	292;"	d
F2FS_MAX_EXTENSION	./include/f2fs_fs.h	295;"	d
F2FS_MAX_HASH	./include/f2fs_fs.h	670;"	d
F2FS_MAX_SEGMENT	./include/f2fs_fs.h	544;"	d
F2FS_META_INO	./include/f2fs_fs.h	303;"	d
F2FS_MIN_VOLUME_SIZE	./include/f2fs_fs.h	212;"	d
F2FS_NAME_LEN	./include/f2fs_fs.h	421;"	d
F2FS_NODE_INO	./include/f2fs_fs.h	302;"	d
F2FS_NUMBER_OF_CHECKPOINT_PACK	./include/f2fs_fs.h	213;"	d
F2FS_ORPHANS_PER_BLOCK	./include/f2fs_fs.h	401;"	d
F2FS_RAW_SUPER	./fsck/f2fs.h	/^static inline struct f2fs_super_block *F2FS_RAW_SUPER(struct f2fs_sb_info *sbi)$/;"	f
F2FS_ROOT_INO	./include/f2fs_fs.h	301;"	d
F2FS_SLOT_LEN	./include/f2fs_fs.h	676;"	d
F2FS_SLOT_LEN_BITS	./include/f2fs_fs.h	677;"	d
F2FS_STATUS	./tools/f2fstat.c	17;"	d	file:
F2FS_SUPER_MAGIC	./include/f2fs_fs.h	208;"	d
F2FS_SUPER_OFFSET	./include/f2fs_fs.h	291;"	d
FILE_TYPE	./include/f2fs_fs.h	/^enum FILE_TYPE {$/;"	g
FIX_MSG	./include/f2fs_fs.h	117;"	d
FREE_I_START_SEGNO	./fsck/f2fs.h	293;"	d
FSCK	./include/f2fs_fs.h	/^	FSCK,$/;"	e	enum:f2fs_config_func
FSYNC_BIT_SHIFT	./include/f2fs_fs.h	/^	FSYNC_BIT_SHIFT,$/;"	e	enum:__anon3
GET_BLKOFF_FROM_SEG0	./fsck/f2fs.h	290;"	d
GET_DENTRY_SLOTS	./include/f2fs_fs.h	679;"	d
GET_R2L_SEGNO	./fsck/f2fs.h	295;"	d
GET_SEGNO	./fsck/f2fs.h	/^static inline u32 GET_SEGNO(struct f2fs_sb_info *sbi, u64 blk_addr)$/;"	f
GET_SEGNO_FROM_SEG0	./fsck/f2fs.h	287;"	d
GET_SEGOFF_FROM_SEG0	./fsck/f2fs.h	284;"	d
GET_SIT_TYPE	./include/f2fs_fs.h	556;"	d
GET_SIT_VBLOCKS	./include/f2fs_fs.h	554;"	d
GET_SUM_BLKADDR	./fsck/f2fs.h	281;"	d
GET_SUM_TYPE	./include/f2fs_fs.h	285;"	d
GET_ZONENO_FROM_SEGNO	./fsck/f2fs.h	270;"	d
GFP_F2FS_ZERO	./include/f2fs_fs.h	306;"	d
INIT_LIST_HEAD	./include/list.h	/^static inline void INIT_LIST_HEAD(struct list_head *list)$/;"	f
INLINE_DATA_OFFSET	./include/f2fs_fs.h	442;"	d
INLINE_DENTRY_BITMAP_SIZE	./include/f2fs_fs.h	715;"	d
INLINE_RESERVED_SIZE	./include/f2fs_fs.h	717;"	d
IS_DATASEG	./fsck/f2fs.h	273;"	d
IS_NODESEG	./fsck/f2fs.h	277;"	d
IS_SUM_NODE_SEG	./fsck/f2fs.h	385;"	d
IS_VALID_BLK_ADDR	./fsck/f2fs.h	/^static inline bool IS_VALID_BLK_ADDR(struct f2fs_sb_info *sbi, u32 addr)$/;"	f
IS_VALID_NID	./fsck/f2fs.h	/^static inline bool IS_VALID_NID(struct f2fs_sb_info *sbi, u32 nid)$/;"	f
KEY_META	./tools/f2fstat.c	20;"	d	file:
KEY_NODE	./tools/f2fstat.c	19;"	d	file:
LFS	./include/f2fs_fs.h	/^	LFS = 0,$/;"	e	enum:__anon10
LIST_HEAD	./include/list.h	19;"	d
LIST_HEAD_INIT	./include/list.h	17;"	d
LIST_POISON1	./include/list.h	3;"	d
LIST_POISON2	./include/list.h	4;"	d
MAX_ACTIVE_DATA_LOGS	./include/f2fs_fs.h	316;"	d
MAX_ACTIVE_LOGS	./include/f2fs_fs.h	314;"	d
MAX_ACTIVE_NODE_LOGS	./include/f2fs_fs.h	315;"	d
MAX_DIR_HASH_DEPTH	./include/f2fs_fs.h	685;"	d
MAX_INLINE_DATA	./include/f2fs_fs.h	439;"	d
MAX_RW	./tools/f2fs_io_parse.c	/^	MAX_RW,$/;"	e	enum:rw_type	file:
MAX_SIT_BITMAP_SIZE	./include/f2fs_fs.h	545;"	d
MSG	./include/f2fs_fs.h	144;"	d
NAT_BITMAP	./fsck/f2fs.h	/^	NAT_BITMAP,$/;"	e	enum:__anon1
NAT_ENTRY_PER_BLOCK	./include/f2fs_fs.h	518;"	d
NAT_JOURNAL	./include/f2fs_fs.h	/^	NAT_JOURNAL = 0,$/;"	e	enum:__anon7
NAT_JOURNAL_ENTRIES	./include/f2fs_fs.h	613;"	d
NAT_JOURNAL_RESERVED	./include/f2fs_fs.h	615;"	d
NEW_ADDR	./include/f2fs_fs.h	299;"	d
NIDS_PER_BLOCK	./include/f2fs_fs.h	426;"	d
NM_I	./fsck/f2fs.h	/^static inline struct f2fs_nm_info *NM_I(struct f2fs_sb_info *sbi)$/;"	f
NODE_DIND_BLOCK	./include/f2fs_fs.h	432;"	d
NODE_DIR1_BLOCK	./include/f2fs_fs.h	428;"	d
NODE_DIR2_BLOCK	./include/f2fs_fs.h	429;"	d
NODE_IND1_BLOCK	./include/f2fs_fs.h	430;"	d
NODE_IND2_BLOCK	./include/f2fs_fs.h	431;"	d
NODE_TYPE	./fsck/fsck.h	/^enum NODE_TYPE {$/;"	g
NO_CHECK_TYPE	./include/f2fs_fs.h	/^	NO_CHECK_TYPE$/;"	e	enum:__anon2
NR_CURSEG_DATA_TYPE	./include/f2fs_fs.h	268;"	d
NR_CURSEG_NODE_TYPE	./include/f2fs_fs.h	269;"	d
NR_CURSEG_TYPE	./include/f2fs_fs.h	270;"	d
NR_DENTRY_IN_BLOCK	./include/f2fs_fs.h	682;"	d
NR_INLINE_DENTRY	./include/f2fs_fs.h	712;"	d
NULL_ADDR	./include/f2fs_fs.h	298;"	d
NULL_SEGNO	./include/f2fs_fs.h	112;"	d
OFFSET_BIT_SHIFT	./include/f2fs_fs.h	/^	OFFSET_BIT_SHIFT$/;"	e	enum:__anon3
OFFSET_IN_SEG	./fsck/f2fs.h	/^static inline u32 OFFSET_IN_SEG(struct f2fs_sb_info *sbi, u64 blk_addr)$/;"	f
PAGE_CACHE_SIZE	./include/f2fs_fs.h	206;"	d
PAGE_SIZE	./include/f2fs_fs.h	205;"	d
POISON_POINTER_DELTA	./include/list.h	2;"	d
P_NAMELEN	./tools/f2fs_io_parse.c	20;"	d	file:
READ	./tools/f2fs_io_parse.c	/^	READ,$/;"	e	enum:rw_type	file:
SEG_ALIGN	./include/f2fs_fs.h	791;"	d
SEG_TYPE_CUR_DATA	./fsck/fsck.h	/^	SEG_TYPE_CUR_DATA,$/;"	e	enum:seg_type
SEG_TYPE_CUR_NODE	./fsck/fsck.h	/^	SEG_TYPE_CUR_NODE,$/;"	e	enum:seg_type
SEG_TYPE_DATA	./fsck/fsck.h	/^	SEG_TYPE_DATA,$/;"	e	enum:seg_type
SEG_TYPE_MAX	./fsck/fsck.h	/^	SEG_TYPE_MAX,$/;"	e	enum:seg_type
SEG_TYPE_NODE	./fsck/fsck.h	/^	SEG_TYPE_NODE,$/;"	e	enum:seg_type
SET_SUM_TYPE	./include/f2fs_fs.h	286;"	d
SHOW_ALL	./tools/f2fs_io_parse.c	/^	SHOW_ALL,$/;"	e	enum:show_type	file:
SHOW_FTYPE	./tools/f2fs_io_parse.c	/^	SHOW_FTYPE,$/;"	e	enum:show_type	file:
SHOW_PID	./tools/f2fs_io_parse.c	/^	SHOW_PID,$/;"	e	enum:show_type	file:
SIT_BITMAP	./fsck/f2fs.h	/^	SIT_BITMAP$/;"	e	enum:__anon1
SIT_BLOCK_OFFSET	./fsck/f2fs.h	327;"	d
SIT_ENTRY_OFFSET	./fsck/f2fs.h	325;"	d
SIT_ENTRY_PER_BLOCK	./include/f2fs_fs.h	538;"	d
SIT_I	./fsck/f2fs.h	/^static inline struct sit_info *SIT_I(struct f2fs_sb_info *sbi)$/;"	f
SIT_JOURNAL	./include/f2fs_fs.h	/^	SIT_JOURNAL$/;"	e	enum:__anon7
SIT_JOURNAL_ENTRIES	./include/f2fs_fs.h	617;"	d
SIT_JOURNAL_RESERVED	./include/f2fs_fs.h	619;"	d
SIT_VBLOCKS_MASK	./include/f2fs_fs.h	553;"	d
SIT_VBLOCKS_SHIFT	./include/f2fs_fs.h	552;"	d
SIT_VBLOCK_MAP_SIZE	./include/f2fs_fs.h	537;"	d
SIZE_OF_DENTRY_BITMAP	./include/f2fs_fs.h	688;"	d
SIZE_OF_DIR_ENTRY	./include/f2fs_fs.h	687;"	d
SIZE_OF_RESERVED	./include/f2fs_fs.h	690;"	d
SM_I	./fsck/f2fs.h	/^static inline struct f2fs_sm_info *SM_I(struct f2fs_sb_info *sbi)$/;"	f
SSR	./include/f2fs_fs.h	/^	SSR$/;"	e	enum:__anon10
START_BLOCK	./fsck/f2fs.h	297;"	d
SUMMARY_SIZE	./include/f2fs_fs.h	586;"	d
SUM_ENTRIES_SIZE	./include/f2fs_fs.h	588;"	d
SUM_FOOTER_SIZE	./include/f2fs_fs.h	587;"	d
SUM_JOURNAL_SIZE	./include/f2fs_fs.h	611;"	d
SUM_TYPE_DATA	./include/f2fs_fs.h	604;"	d
SUM_TYPE_NODE	./include/f2fs_fs.h	603;"	d
TEA_transform	./lib/libf2fs.c	/^static void TEA_transform(unsigned int buf[4], unsigned int const in[])$/;"	f	file:
TOTAL_SEGS	./fsck/f2fs.h	329;"	d
TP_IOS	./tools/f2fs_io_parse.c	/^	TP_IOS,$/;"	e	enum:trace_types	file:
TP_MAX	./tools/f2fs_io_parse.c	/^	TP_MAX,$/;"	e	enum:trace_types	file:
TP_PID	./tools/f2fs_io_parse.c	/^	TP_PID,$/;"	e	enum:trace_types	file:
TYPE_DIRECT_NODE	./fsck/fsck.h	/^	TYPE_DIRECT_NODE = 43,$/;"	e	enum:NODE_TYPE
TYPE_DOUBLE_INDIRECT_NODE	./fsck/fsck.h	/^	TYPE_DOUBLE_INDIRECT_NODE = 67,$/;"	e	enum:NODE_TYPE
TYPE_INDIRECT_NODE	./fsck/fsck.h	/^	TYPE_INDIRECT_NODE = 53,$/;"	e	enum:NODE_TYPE
TYPE_INODE	./fsck/fsck.h	/^	TYPE_INODE = 37,$/;"	e	enum:NODE_TYPE
TYPE_XATTR	./fsck/fsck.h	/^	TYPE_XATTR = 77$/;"	e	enum:NODE_TYPE
VERSION_LEN	./include/f2fs_fs.h	219;"	d
WRITE	./tools/f2fs_io_parse.c	/^	WRITE,$/;"	e	enum:rw_type	file:
XATTR_NODE_OFFSET	./include/f2fs_fs.h	494;"	d
ZONE_ALIGN	./include/f2fs_fs.h	792;"	d
_F2FS_H_	./fsck/f2fs.h	12;"	d
_FSCK_H_	./fsck/fsck.h	12;"	d
_GNU_SOURCE	./mkfs/f2fs_format_utils.c	12;"	d	file:
_LARGEFILE64_SOURCE	./lib/libf2fs.c	9;"	d	file:
_LARGEFILE64_SOURCE	./lib/libf2fs_io.c	9;"	d	file:
_LARGEFILE64_SOURCE	./mkfs/f2fs_format.c	9;"	d	file:
_LARGEFILE64_SOURCE	./mkfs/f2fs_format_main.c	9;"	d	file:
_LARGEFILE64_SOURCE	./mkfs/f2fs_format_utils.c	10;"	d	file:
_LARGEFILE64_SOURCE	./mkfs/f2fs_format_utils.h	9;"	d
_LARGEFILE64_SOURCE	./tools/f2fs_io_parse.c	11;"	d	file:
_LARGEFILE64_SOURCE	./tools/fibmap.c	1;"	d	file:
_LARGEFILE_SOURCE	./mkfs/f2fs_format_utils.c	9;"	d	file:
__ATOMIC_FILE	./tools/f2fs_io_parse.c	/^	__ATOMIC_FILE,$/;"	e	enum:file_type	file:
__DIR_FILE	./tools/f2fs_io_parse.c	/^	__DIR_FILE,$/;"	e	enum:file_type	file:
__F2FS_FS_H__	./include/f2fs_fs.h	13;"	d
__META_FILE	./tools/f2fs_io_parse.c	/^	__META_FILE,$/;"	e	enum:file_type	file:
__MISC_FILE	./tools/f2fs_io_parse.c	/^	__MISC_FILE,$/;"	e	enum:file_type	file:
__NODE_FILE	./tools/f2fs_io_parse.c	/^	__NODE_FILE,$/;"	e	enum:file_type	file:
__NORMAL_FILE	./tools/f2fs_io_parse.c	/^	__NORMAL_FILE,$/;"	e	enum:file_type	file:
__NR_FILES	./tools/f2fs_io_parse.c	/^	__NR_FILES,$/;"	e	enum:file_type	file:
__VOLATILE_FILE	./tools/f2fs_io_parse.c	/^	__VOLATILE_FILE,$/;"	e	enum:file_type	file:
__bitmap_ptr	./fsck/f2fs.h	/^static inline void *__bitmap_ptr(struct f2fs_sb_info *sbi, int flag)$/;"	f
__bitmap_size	./fsck/f2fs.h	/^static inline unsigned long __bitmap_size(struct f2fs_sb_info *sbi, int flag)$/;"	f
__chk_dentries	./fsck/fsck.c	/^static int __chk_dentries(struct f2fs_sb_info *sbi, u32 *child_cnt,$/;"	f	file:
__end_block_addr	./fsck/f2fs.h	/^static inline block_t __end_block_addr(struct f2fs_sb_info *sbi)$/;"	f
__ffs	./lib/libf2fs.c	/^static inline unsigned long __ffs(unsigned long word)$/;"	f	file:
__list_add	./include/list.h	/^static inline void __list_add(struct list_head *new,$/;"	f
__list_del	./include/list.h	/^static inline void __list_del(struct list_head * prev, struct list_head * next)$/;"	f
__list_del_entry	./include/list.h	/^static inline void __list_del_entry(struct list_head *entry)$/;"	f
__make_head	./tools/f2fstat.c	/^void __make_head(char *head, int index, int i, int len)$/;"	f
__packed	./include/f2fs_fs.h	/^} __packed;$/;"	v	typeref:struct:f2fs_inline_dentry
__print_ftype	./tools/f2fs_io_parse.c	/^static void __print_ftype()$/;"	f	file:
__print_pid	./tools/f2fs_io_parse.c	/^static void __print_pid()$/;"	f	file:
__start_cp_addr	./fsck/f2fs.h	/^static inline block_t __start_cp_addr(struct f2fs_sb_info *sbi)$/;"	f
__start_sum_addr	./fsck/f2fs.h	/^static inline block_t __start_sum_addr(struct f2fs_sb_info *sbi)$/;"	f
active_logs	./fsck/f2fs.h	/^	int active_logs;                        \/* # of active logs *\/$/;"	m	struct:f2fs_sb_info
add_into_hard_link_list	./fsck/fsck.c	/^static int add_into_hard_link_list(struct f2fs_sb_info *sbi,$/;"	f	file:
addr	./include/f2fs_fs.h	/^	__le32 addr[ADDRS_PER_BLOCK];	\/* array of data block address *\/$/;"	m	struct:direct_node
addrs_per_inode	./lib/libf2fs.c	/^unsigned int addrs_per_inode(struct f2fs_inode *i)$/;"	f
alloc_type	./fsck/f2fs.h	/^	unsigned char alloc_type;               \/* current allocation type *\/$/;"	m	struct:curseg_info
alloc_type	./include/f2fs_fs.h	/^	unsigned char alloc_type[MAX_ACTIVE_LOGS];$/;"	m	struct:f2fs_checkpoint
alloc_valid_block_count	./fsck/f2fs.h	/^	block_t alloc_valid_block_count;        \/* # of allocated blocks *\/$/;"	m	struct:f2fs_sb_info
atoh	./tools/f2fs_io_parse.c	/^static inline int atoh(char *str)$/;"	f	file:
auto_fix	./include/f2fs_fs.h	/^	int auto_fix;$/;"	m	struct:f2fs_configuration
bg_gc	./tools/f2fstat.c	/^unsigned long gc, bg_gc;$/;"	v
bitmap_size	./fsck/f2fs.h	/^	int bitmap_size;$/;"	m	struct:f2fs_nm_info
bitmap_size	./fsck/f2fs.h	/^	unsigned int bitmap_size;       \/* SIT bitmap size *\/$/;"	m	struct:sit_info
bits_in_byte	./lib/libf2fs.c	/^static const int bits_in_byte[256] = {$/;"	v	file:
blk_addr	./fsck/f2fs.h	/^	u32 blk_addr;$/;"	m	struct:node_info
blk_addr	./fsck/fsck.h	/^	int32_t blk_addr;$/;"	m	struct:dump_option
blk_addr	./include/f2fs_fs.h	/^	__le16 blk_addr;	\/* block index in current CP *\/$/;"	m	struct:f2fs_orphan_block
blk_addr	./include/f2fs_fs.h	/^	__le32 blk_addr;	\/* start block address of the extent *\/$/;"	m	struct:f2fs_extent
blk_count	./include/f2fs_fs.h	/^	__le16 blk_count;	\/* Number of orphan inode blocks in CP *\/$/;"	m	struct:f2fs_orphan_block
blk_count	./tools/fibmap.c	/^	__u32 blk_count;$/;"	m	struct:file_ext	file:
blks_per_seg	./include/f2fs_fs.h	/^	u_int32_t blks_per_seg;$/;"	m	struct:f2fs_configuration
block	./fsck/fsck.h	/^struct block {$/;"	s
block_addr	./include/f2fs_fs.h	/^	__le32 block_addr;	\/* block address *\/$/;"	m	struct:f2fs_nat_entry
block_count	./include/f2fs_fs.h	/^	__le64 block_count;		\/* total # of user blocks *\/$/;"	m	struct:f2fs_super_block
block_t	./include/f2fs_fs.h	/^typedef u32		block_t;$/;"	t
blocks_per_seg	./fsck/f2fs.h	/^	unsigned int blocks_per_seg;            \/* blocks per segment *\/$/;"	m	struct:f2fs_sb_info
blocksize	./fsck/f2fs.h	/^	unsigned int blocksize;                 \/* block size *\/$/;"	m	struct:f2fs_sb_info
bool	./include/f2fs_fs.h	/^typedef u8		bool;$/;"	t
bswap_16	./include/f2fs_fs.h	/^static inline uint16_t bswap_16(uint16_t val)$/;"	f
bswap_32	./include/f2fs_fs.h	/^static inline uint32_t bswap_32(uint32_t val)$/;"	f
bswap_64	./include/f2fs_fs.h	/^static inline uint64_t bswap_64(uint64_t val)$/;"	f
buf	./fsck/fsck.h	/^	unsigned char buf[BLOCK_SZ];$/;"	m	struct:block
bug_on	./include/f2fs_fs.h	/^	int bug_on;$/;"	m	struct:f2fs_configuration
build_curseg	./fsck/mount.c	/^static void build_curseg(struct f2fs_sb_info *sbi)$/;"	f	file:
build_nat_area_bitmap	./fsck/mount.c	/^void build_nat_area_bitmap(struct f2fs_sb_info *sbi)$/;"	f
build_node_manager	./fsck/mount.c	/^int build_node_manager(struct f2fs_sb_info *sbi)$/;"	f
build_segment_manager	./fsck/mount.c	/^int build_segment_manager(struct f2fs_sb_info *sbi)$/;"	f
build_sit_area_bitmap	./fsck/mount.c	/^void build_sit_area_bitmap(struct f2fs_sb_info *sbi)$/;"	f
build_sit_entries	./fsck/mount.c	/^void build_sit_entries(struct f2fs_sb_info *sbi)$/;"	f
build_sit_info	./fsck/mount.c	/^int build_sit_info(struct f2fs_sb_info *sbi)$/;"	f
check_block_count	./fsck/mount.c	/^void check_block_count(struct f2fs_sb_info *sbi,$/;"	f
check_curseg_offset	./fsck/fsck.c	/^int check_curseg_offset(struct f2fs_sb_info *sbi)$/;"	f
check_seg_range	./fsck/mount.c	/^inline void check_seg_range(struct f2fs_sb_info *sbi, unsigned int segno)$/;"	f
check_sit_types	./fsck/fsck.c	/^int check_sit_types(struct f2fs_sb_info *sbi)$/;"	f
check_stop	./scripts/spo_test.sh	/^check_stop() {$/;"	f
check_sum	./include/f2fs_fs.h	/^	__le32 check_sum;	\/* CRC32 for orphan inode block *\/$/;"	m	struct:f2fs_orphan_block
check_sum	./include/f2fs_fs.h	/^	__u32 check_sum;		\/* summary checksum *\/$/;"	m	struct:summary_footer
checkpoint_ver	./include/f2fs_fs.h	/^	__le64 checkpoint_ver;		\/* checkpoint block version number *\/$/;"	m	struct:f2fs_checkpoint
checksum_offset	./include/f2fs_fs.h	/^	__le32 checksum_offset;		\/* checksum offset inside cp block *\/$/;"	m	struct:f2fs_checkpoint
checksum_offset	./include/f2fs_fs.h	/^	__le32 checksum_offset;		\/* checksum offset inside super block *\/$/;"	m	struct:f2fs_super_block
chk	./fsck/fsck.h	/^	} chk;$/;"	m	struct:f2fs_fsck	typeref:struct:f2fs_fsck::chk_result
chk_result	./fsck/fsck.h	/^	struct chk_result {$/;"	s	struct:f2fs_fsck
ckpt	./fsck/f2fs.h	/^	struct f2fs_checkpoint *ckpt;$/;"	m	struct:f2fs_sb_info	typeref:struct:f2fs_sb_info::f2fs_checkpoint
ckpt_flags	./include/f2fs_fs.h	/^	__le32 ckpt_flags;		\/* Flags : umount and journal_present *\/$/;"	m	struct:f2fs_checkpoint
ckpt_valid_blocks	./fsck/f2fs.h	/^	unsigned short ckpt_valid_blocks;$/;"	m	struct:seg_entry
ckpt_valid_map	./fsck/f2fs.h	/^	unsigned char *ckpt_valid_map;$/;"	m	struct:seg_entry
clear_bit	./lib/libf2fs.c	/^int clear_bit(unsigned int nr, void * addr)$/;"	f
compare_mm_table	./tools/f2fstat.c	/^static int compare_mm_table(const void *a, const void *b)$/;"	f	file:
config	./lib/libf2fs_io.c	/^struct f2fs_configuration config;$/;"	v	typeref:struct:f2fs_configuration
configure_extension_list	./mkfs/f2fs_format.c	/^static void configure_extension_list(void)$/;"	f	file:
container_of	./include/list.h	9;"	d
cp	./mkfs/f2fs_format.c	/^struct f2fs_checkpoint *cp;$/;"	v	typeref:struct:f2fs_checkpoint
cp	./tools/f2fstat.c	/^unsigned long cp;$/;"	v
cp_blkaddr	./include/f2fs_fs.h	/^	__le32 cp_blkaddr;		\/* start block address of checkpoint *\/$/;"	m	struct:f2fs_super_block
cp_pack_start_sum	./include/f2fs_fs.h	/^	__le32 cp_pack_start_sum;	\/* start block number of data summary *\/$/;"	m	struct:f2fs_checkpoint
cp_pack_total_block_count	./include/f2fs_fs.h	/^	__le32 cp_pack_total_block_count;	\/* total # of one cp pack *\/$/;"	m	struct:f2fs_checkpoint
cp_payload	./include/f2fs_fs.h	/^	__le32 cp_payload;$/;"	m	struct:f2fs_super_block
cp_ver	./include/f2fs_fs.h	/^	__le64 cp_ver;		\/* checkpoint version *\/$/;"	m	struct:node_footer
cpu_to_le16	./include/f2fs_fs.h	100;"	d
cpu_to_le16	./include/f2fs_fs.h	93;"	d
cpu_to_le32	./include/f2fs_fs.h	101;"	d
cpu_to_le32	./include/f2fs_fs.h	94;"	d
cpu_to_le64	./include/f2fs_fs.h	102;"	d
cpu_to_le64	./include/f2fs_fs.h	95;"	d
cur_cp	./fsck/f2fs.h	/^	int cur_cp;$/;"	m	struct:f2fs_sb_info
cur_data_blkoff	./include/f2fs_fs.h	/^	__le16 cur_data_blkoff[MAX_ACTIVE_DATA_LOGS];$/;"	m	struct:f2fs_checkpoint
cur_data_segno	./include/f2fs_fs.h	/^	__le32 cur_data_segno[MAX_ACTIVE_DATA_LOGS];$/;"	m	struct:f2fs_checkpoint
cur_node_blkoff	./include/f2fs_fs.h	/^	__le16 cur_node_blkoff[MAX_ACTIVE_NODE_LOGS];$/;"	m	struct:f2fs_checkpoint
cur_node_segno	./include/f2fs_fs.h	/^	__le32 cur_node_segno[MAX_ACTIVE_NODE_LOGS];$/;"	m	struct:f2fs_checkpoint
cur_seg	./include/f2fs_fs.h	/^	u_int32_t cur_seg[6];$/;"	m	struct:f2fs_configuration
cur_valid_map	./fsck/f2fs.h	/^	unsigned char *cur_valid_map;   \/* validity bitmap of blocks *\/$/;"	m	struct:seg_entry
cur_victim_sec	./fsck/f2fs.h	/^	unsigned int cur_victim_sec;            \/* current victim section num *\/$/;"	m	struct:f2fs_sb_info
curseg_array	./fsck/f2fs.h	/^	struct curseg_info *curseg_array;$/;"	m	struct:f2fs_sm_info	typeref:struct:f2fs_sm_info::curseg_info
curseg_info	./fsck/f2fs.h	/^struct curseg_info {$/;"	s
dbg	./tools/f2fstat.c	11;"	d	file:
dbg	./tools/f2fstat.c	9;"	d	file:
dbg_lv	./include/f2fs_fs.h	/^	int dbg_lv;$/;"	m	struct:f2fs_configuration
delay	./tools/f2fstat.c	/^	int delay;$/;"	m	struct:options	file:
dentry	./include/f2fs_fs.h	/^	struct f2fs_dir_entry dentry[NR_DENTRY_IN_BLOCK];$/;"	m	struct:f2fs_dentry_block	typeref:struct:f2fs_dentry_block::f2fs_dir_entry
dentry	./include/f2fs_fs.h	/^	struct f2fs_dir_entry dentry[NR_INLINE_DENTRY];$/;"	m	struct:f2fs_inline_dentry	typeref:struct:f2fs_inline_dentry::f2fs_dir_entry
dentry_bitmap	./include/f2fs_fs.h	/^	__u8 dentry_bitmap[INLINE_DENTRY_BITMAP_SIZE];$/;"	m	struct:f2fs_inline_dentry
dentry_bitmap	./include/f2fs_fs.h	/^	__u8 dentry_bitmap[SIZE_OF_DENTRY_BITMAP];$/;"	m	struct:f2fs_dentry_block
dentry_depth	./fsck/fsck.h	/^	u32 dentry_depth;$/;"	m	struct:f2fs_fsck
dev_fill	./lib/libf2fs_io.c	/^int dev_fill(void *buf, __u64 offset, size_t len)$/;"	f
dev_read	./lib/libf2fs_io.c	/^int dev_read(void *buf, __u64 offset, size_t len)$/;"	f
dev_read_block	./lib/libf2fs_io.c	/^int dev_read_block(void *buf, __u64 blk_addr)$/;"	f
dev_read_blocks	./lib/libf2fs_io.c	/^int dev_read_blocks(void *buf, __u64 addr, __u32 nr_blks)$/;"	f
dev_read_version	./lib/libf2fs_io.c	/^int dev_read_version(void *buf, __u64 offset, size_t len)$/;"	f
dev_write	./lib/libf2fs_io.c	/^int dev_write(void *buf, __u64 offset, size_t len)$/;"	f
dev_write_block	./lib/libf2fs_io.c	/^int dev_write_block(void *buf, __u64 blk_addr)$/;"	f
dev_write_dump	./lib/libf2fs_io.c	/^int dev_write_dump(void *buf, __u64 offset, size_t len)$/;"	f
device_name	./include/f2fs_fs.h	/^	char *device_name;$/;"	m	struct:f2fs_configuration
direct_node	./include/f2fs_fs.h	/^struct direct_node {$/;"	s
dirty_dents	./tools/f2fstat.c	/^unsigned long dirty_dents;$/;"	v
dirty_meta	./tools/f2fstat.c	/^unsigned long dirty_meta, meta_kb;$/;"	v
dirty_node	./tools/f2fstat.c	/^unsigned long dirty_node, node_kb;$/;"	v
dirty_segs	./tools/f2fstat.c	/^unsigned long dirty_segs;$/;"	v
dirty_sentries	./fsck/f2fs.h	/^	unsigned int dirty_sentries;            \/* # of dirty sentries *\/$/;"	m	struct:sit_info
dirty_sentries_bitmap	./fsck/f2fs.h	/^	unsigned long *dirty_sentries_bitmap;   \/* bitmap for dirty sentries *\/$/;"	m	struct:sit_info
dirty_sit	./tools/f2fstat.c	/^unsigned long dirty_sit;$/;"	v
dn	./include/f2fs_fs.h	/^		struct direct_node dn;$/;"	m	union:f2fs_node::__anon4	typeref:struct:f2fs_node::__anon4::direct_node
do_dump	./fsck/main.c	/^static void do_dump(struct f2fs_sb_info *sbi)$/;"	f	file:
do_fsck	./fsck/main.c	/^static void do_fsck(struct f2fs_sb_info *sbi)$/;"	f	file:
do_init	./tools/f2fs_io_parse.c	/^static void do_init()$/;"	f	file:
do_parse	./tools/f2fs_io_parse.c	/^static void do_parse(FILE *file)$/;"	f	file:
do_print	./tools/f2fs_io_parse.c	/^static void do_print()$/;"	f	file:
dump_data_blk	./fsck/dump.c	/^static void dump_data_blk(__u64 offset, u32 blkaddr)$/;"	f	file:
dump_data_offset	./fsck/dump.c	/^static void dump_data_offset(u32 blk_addr, int ofs_in_node)$/;"	f	file:
dump_fd	./include/f2fs_fs.h	/^	int32_t dump_fd;$/;"	m	struct:f2fs_configuration
dump_file	./fsck/dump.c	/^void dump_file(struct f2fs_sb_info *sbi, struct node_info *ni,$/;"	f
dump_info_from_blkaddr	./fsck/dump.c	/^int dump_info_from_blkaddr(struct f2fs_sb_info *sbi, u32 blk_addr)$/;"	f
dump_inode_blk	./fsck/dump.c	/^static void dump_inode_blk(struct f2fs_sb_info *sbi, u32 nid,$/;"	f	file:
dump_node	./fsck/dump.c	/^void dump_node(struct f2fs_sb_info *sbi, nid_t nid)$/;"	f
dump_node_blk	./fsck/dump.c	/^static void dump_node_blk(struct f2fs_sb_info *sbi, int ntype,$/;"	f	file:
dump_node_from_blkaddr	./fsck/dump.c	/^static void dump_node_from_blkaddr(u32 blk_addr)$/;"	f	file:
dump_node_offset	./fsck/dump.c	/^static void dump_node_offset(u32 blk_addr)$/;"	f	file:
dump_option	./fsck/fsck.h	/^struct dump_option {$/;"	s
dump_usage	./fsck/main.c	/^void dump_usage()$/;"	f
elapsed_time	./fsck/f2fs.h	/^	unsigned long long elapsed_time;        \/* elapsed time after mount *\/$/;"	m	struct:sit_info
elapsed_time	./include/f2fs_fs.h	/^	__le64 elapsed_time;		\/* mounted time *\/$/;"	m	struct:f2fs_checkpoint
end_blk	./tools/fibmap.c	/^	__u32 end_blk;$/;"	m	struct:file_ext	file:
end_sit	./fsck/fsck.h	/^	int end_sit;$/;"	m	struct:dump_option
end_ssa	./fsck/fsck.h	/^	int end_ssa;$/;"	m	struct:dump_option
entries	./include/f2fs_fs.h	/^	struct f2fs_nat_entry entries[NAT_ENTRY_PER_BLOCK];$/;"	m	struct:f2fs_nat_block	typeref:struct:f2fs_nat_block::f2fs_nat_entry
entries	./include/f2fs_fs.h	/^	struct f2fs_sit_entry entries[SIT_ENTRY_PER_BLOCK];$/;"	m	struct:f2fs_sit_block	typeref:struct:f2fs_sit_block::f2fs_sit_entry
entries	./include/f2fs_fs.h	/^	struct f2fs_summary entries[ENTRIES_IN_SUM];$/;"	m	struct:f2fs_summary_block	typeref:struct:f2fs_summary_block::f2fs_summary
entries	./include/f2fs_fs.h	/^	struct nat_journal_entry entries[NAT_JOURNAL_ENTRIES];$/;"	m	struct:nat_journal	typeref:struct:nat_journal::nat_journal_entry
entries	./include/f2fs_fs.h	/^	struct sit_journal_entry entries[SIT_JOURNAL_ENTRIES];$/;"	m	struct:sit_journal	typeref:struct:sit_journal::sit_journal_entry
entry_count	./include/f2fs_fs.h	/^	__le32 entry_count;	\/* Total number of orphan nodes in current CP *\/$/;"	m	struct:f2fs_orphan_block
entry_type	./include/f2fs_fs.h	/^	unsigned char entry_type;	\/* SUM_TYPE_XXX *\/$/;"	m	struct:summary_footer
extension_count	./include/f2fs_fs.h	/^	__le32 extension_count;		\/* # of extensions below *\/$/;"	m	struct:f2fs_super_block
extension_list	./include/f2fs_fs.h	/^	__u8 extension_list[F2FS_MAX_EXTENSION][8];	\/* extension array *\/$/;"	m	struct:f2fs_super_block
extension_list	./include/f2fs_fs.h	/^	char *extension_list;$/;"	m	struct:f2fs_configuration
f2fs_add_default_dentry_root	./mkfs/f2fs_format.c	/^static int f2fs_add_default_dentry_root(void)$/;"	f	file:
f2fs_cal_crc32	./lib/libf2fs.c	/^u_int32_t f2fs_cal_crc32(u_int32_t crc, void *buf, int len)$/;"	f
f2fs_checkpoint	./include/f2fs_fs.h	/^struct f2fs_checkpoint {$/;"	s
f2fs_clear_bit	./lib/libf2fs.c	/^int f2fs_clear_bit(unsigned int nr, char *addr)$/;"	f
f2fs_config_func	./include/f2fs_fs.h	/^enum f2fs_config_func {$/;"	g
f2fs_configuration	./include/f2fs_fs.h	/^struct f2fs_configuration {$/;"	s
f2fs_crc_valid	./lib/libf2fs.c	/^int f2fs_crc_valid(u_int32_t blk_crc, void *buf, int len)$/;"	f
f2fs_create_root_dir	./mkfs/f2fs_format.c	/^static int f2fs_create_root_dir(void)$/;"	f	file:
f2fs_dentry_block	./include/f2fs_fs.h	/^struct f2fs_dentry_block {$/;"	s
f2fs_dentry_hash	./lib/libf2fs.c	/^f2fs_hash_t f2fs_dentry_hash(const unsigned char *name, int len)$/;"	f
f2fs_dev_is_umounted	./lib/libf2fs.c	/^int f2fs_dev_is_umounted(struct f2fs_configuration *c)$/;"	f
f2fs_dir_entry	./include/f2fs_fs.h	/^struct f2fs_dir_entry {$/;"	s
f2fs_do_mount	./fsck/mount.c	/^int f2fs_do_mount(struct f2fs_sb_info *sbi)$/;"	f
f2fs_do_umount	./fsck/mount.c	/^void f2fs_do_umount(struct f2fs_sb_info *sbi)$/;"	f
f2fs_extent	./include/f2fs_fs.h	/^struct f2fs_extent {$/;"	s
f2fs_finalize_device	./lib/libf2fs_io.c	/^void f2fs_finalize_device(struct f2fs_configuration *c)$/;"	f
f2fs_format_device	./mkfs/f2fs_format.c	/^int f2fs_format_device(void)$/;"	f
f2fs_fsck	./fsck/fsck.h	/^struct f2fs_fsck {$/;"	s
f2fs_get_device_info	./lib/libf2fs.c	/^int f2fs_get_device_info(struct f2fs_configuration *c)$/;"	f
f2fs_hash_t	./include/f2fs_fs.h	/^typedef __le32	f2fs_hash_t;$/;"	t
f2fs_init_configuration	./lib/libf2fs.c	/^void f2fs_init_configuration(struct f2fs_configuration *c)$/;"	f
f2fs_init_nat_area	./mkfs/f2fs_format.c	/^static int f2fs_init_nat_area(void)$/;"	f	file:
f2fs_init_sit_area	./mkfs/f2fs_format.c	/^static int f2fs_init_sit_area(void)$/;"	f	file:
f2fs_inline_dentry	./include/f2fs_fs.h	/^struct f2fs_inline_dentry {$/;"	s
f2fs_inode	./include/f2fs_fs.h	/^struct f2fs_inode {$/;"	s
f2fs_nat_block	./include/f2fs_fs.h	/^struct f2fs_nat_block {$/;"	s
f2fs_nat_entry	./include/f2fs_fs.h	/^struct f2fs_nat_entry {$/;"	s
f2fs_nm_info	./fsck/f2fs.h	/^struct f2fs_nm_info {$/;"	s
f2fs_node	./include/f2fs_fs.h	/^struct f2fs_node {$/;"	s
f2fs_orphan_block	./include/f2fs_fs.h	/^struct f2fs_orphan_block {$/;"	s
f2fs_parse_options	./fsck/main.c	/^void f2fs_parse_options(int argc, char *argv[])$/;"	f
f2fs_parse_options	./mkfs/f2fs_format_main.c	/^static void f2fs_parse_options(int argc, char *argv[])$/;"	f	file:
f2fs_prepare_super_block	./mkfs/f2fs_format.c	/^static int f2fs_prepare_super_block(void)$/;"	f	file:
f2fs_sb_info	./fsck/f2fs.h	/^struct f2fs_sb_info {$/;"	s
f2fs_set_bit	./lib/libf2fs.c	/^int f2fs_set_bit(unsigned int nr, char *addr)$/;"	f
f2fs_set_main_bitmap	./fsck/fsck.c	/^static inline int f2fs_set_main_bitmap(struct f2fs_sb_info *sbi, u32 blk,$/;"	f	file:
f2fs_sit_block	./include/f2fs_fs.h	/^struct f2fs_sit_block {$/;"	s
f2fs_sit_entry	./include/f2fs_fs.h	/^struct f2fs_sit_entry {$/;"	s
f2fs_sm_info	./fsck/f2fs.h	/^struct f2fs_sm_info {$/;"	s
f2fs_summary	./include/f2fs_fs.h	/^struct f2fs_summary {$/;"	s
f2fs_summary_block	./include/f2fs_fs.h	/^struct f2fs_summary_block {$/;"	s
f2fs_super_block	./include/f2fs_fs.h	/^struct f2fs_super_block {$/;"	s
f2fs_test_bit	./lib/libf2fs.c	/^int f2fs_test_bit(unsigned int nr, const char *p)$/;"	f
f2fs_test_main_bitmap	./fsck/fsck.c	/^static inline int f2fs_test_main_bitmap(struct f2fs_sb_info *sbi, u32 blk)$/;"	f	file:
f2fs_test_sit_bitmap	./fsck/fsck.c	/^static inline int f2fs_test_sit_bitmap(struct f2fs_sb_info *sbi, u32 blk)$/;"	f	file:
f2fs_trim_device	./mkfs/f2fs_format_utils.c	/^int f2fs_trim_device()$/;"	f
f2fs_update_nat_root	./mkfs/f2fs_format.c	/^static int f2fs_update_nat_root(void)$/;"	f	file:
f2fs_write_check_point_pack	./mkfs/f2fs_format.c	/^static int f2fs_write_check_point_pack(void)$/;"	f	file:
f2fs_write_root_inode	./mkfs/f2fs_format.c	/^static int f2fs_write_root_inode(void)$/;"	f	file:
f2fs_write_super_block	./mkfs/f2fs_format.c	/^static int f2fs_write_super_block(void)$/;"	f	file:
f2fstat	./tools/f2fstat.c	/^void f2fstat(struct options *opt)$/;"	f
f_pos	./tools/fibmap.c	/^	__u32 f_pos;$/;"	m	struct:file_ext	file:
fcnt	./fsck/f2fs.h	/^	unsigned int fcnt;$/;"	m	struct:f2fs_nm_info
fd	./include/f2fs_fs.h	/^	int32_t fd, kd;$/;"	m	struct:f2fs_configuration
file_ext	./tools/fibmap.c	/^struct file_ext {$/;"	s	file:
file_type	./include/f2fs_fs.h	/^	__u8 file_type;		\/* file type *\/$/;"	m	struct:f2fs_dir_entry
file_type	./tools/f2fs_io_parse.c	/^enum file_type {$/;"	g	file:
file_type_string	./tools/f2fs_io_parse.c	/^char *file_type_string[] = {$/;"	v
filename	./include/f2fs_fs.h	/^	__u8 filename[NR_DENTRY_IN_BLOCK][F2FS_SLOT_LEN];$/;"	m	struct:f2fs_dentry_block
filename	./include/f2fs_fs.h	/^	__u8 filename[NR_INLINE_DENTRY][F2FS_SLOT_LEN];$/;"	m	struct:f2fs_inline_dentry
find_and_dec_hard_link_list	./fsck/fsck.c	/^static int find_and_dec_hard_link_list(struct f2fs_sb_info *sbi, u32 nid)$/;"	f	file:
find_next_bit	./lib/libf2fs.c	/^unsigned long find_next_bit(const unsigned long *addr, unsigned long size,$/;"	f
fix_checkpoint	./fsck/fsck.c	/^static void fix_checkpoint(struct f2fs_sb_info *sbi)$/;"	f	file:
fix_nat_entries	./fsck/fsck.c	/^static void fix_nat_entries(struct f2fs_sb_info *sbi)$/;"	f	file:
fix_on	./include/f2fs_fs.h	/^	int fix_on;$/;"	m	struct:f2fs_configuration
flag	./include/f2fs_fs.h	/^	__le32 flag;		\/* include cold\/fsync\/dentry marks and offset *\/$/;"	m	struct:node_footer
flag	./tools/f2fstat.c	/^	int flag;$/;"	m	struct:mm_table	file:
fofs	./include/f2fs_fs.h	/^	__le32 fofs;		\/* start file offset of the extent *\/$/;"	m	struct:f2fs_extent
footer	./include/f2fs_fs.h	/^	struct node_footer footer;$/;"	m	struct:f2fs_node	typeref:struct:f2fs_node::node_footer
footer	./include/f2fs_fs.h	/^	struct summary_footer footer;$/;"	m	struct:f2fs_summary_block	typeref:struct:f2fs_summary_block::summary_footer
free_nids	./tools/f2fstat.c	/^unsigned long free_nids;$/;"	v
free_segment_count	./include/f2fs_fs.h	/^	__le32 free_segment_count;	\/* # of free segments in main area *\/$/;"	m	struct:f2fs_checkpoint
free_segs	./fsck/fsck.h	/^		u32 free_segs;$/;"	m	struct:f2fs_fsck::chk_result
free_segs	./tools/f2fstat.c	/^unsigned long free_segs;$/;"	v
fsck	./fsck/f2fs.h	/^	struct f2fs_fsck *fsck;$/;"	m	struct:f2fs_sb_info	typeref:struct:f2fs_sb_info::f2fs_fsck
fsck_chk_data_blk	./fsck/fsck.c	/^int fsck_chk_data_blk(struct f2fs_sb_info *sbi, u32 blk_addr,$/;"	f
fsck_chk_dentry_blk	./fsck/fsck.c	/^int fsck_chk_dentry_blk(struct f2fs_sb_info *sbi, u32 blk_addr,$/;"	f
fsck_chk_didnode_blk	./fsck/fsck.c	/^int fsck_chk_didnode_blk(struct f2fs_sb_info *sbi, struct f2fs_inode *inode,$/;"	f
fsck_chk_dnode_blk	./fsck/fsck.c	/^int fsck_chk_dnode_blk(struct f2fs_sb_info *sbi, struct f2fs_inode *inode,$/;"	f
fsck_chk_idnode_blk	./fsck/fsck.c	/^int fsck_chk_idnode_blk(struct f2fs_sb_info *sbi, struct f2fs_inode *inode,$/;"	f
fsck_chk_inline_dentries	./fsck/fsck.c	/^int fsck_chk_inline_dentries(struct f2fs_sb_info *sbi,$/;"	f
fsck_chk_inode_blk	./fsck/fsck.c	/^void fsck_chk_inode_blk(struct f2fs_sb_info *sbi, u32 nid,$/;"	f
fsck_chk_node_blk	./fsck/fsck.c	/^int fsck_chk_node_blk(struct f2fs_sb_info *sbi, struct f2fs_inode *inode,$/;"	f
fsck_chk_orphan_node	./fsck/fsck.c	/^void fsck_chk_orphan_node(struct f2fs_sb_info *sbi)$/;"	f
fsck_chk_xattr_blk	./fsck/fsck.c	/^static int fsck_chk_xattr_blk(struct f2fs_sb_info *sbi, u32 ino,$/;"	f	file:
fsck_free	./fsck/fsck.c	/^void fsck_free(struct f2fs_sb_info *sbi)$/;"	f
fsck_init	./fsck/fsck.c	/^void fsck_init(struct f2fs_sb_info *sbi)$/;"	f
fsck_usage	./fsck/main.c	/^void fsck_usage()$/;"	f
fsck_verify	./fsck/fsck.c	/^int fsck_verify(struct f2fs_sb_info *sbi)$/;"	f
func	./include/f2fs_fs.h	/^	int func;$/;"	m	struct:f2fs_configuration
gc	./tools/f2fstat.c	/^unsigned long gc, bg_gc;$/;"	v
gc_data_blks	./tools/f2fstat.c	/^unsigned long gc_data_blks;$/;"	v
gc_node_blks	./tools/f2fstat.c	/^unsigned long gc_node_blks;$/;"	v
get_bits_in_byte	./lib/libf2fs.c	/^int get_bits_in_byte(unsigned char n)$/;"	f
get_cp	./mkfs/f2fs_format.c	79;"	d	file:
get_cp_le16	./mkfs/f2fs_format.c	67;"	d	file:
get_cp_le32	./mkfs/f2fs_format.c	66;"	d	file:
get_cp_le64	./mkfs/f2fs_format.c	65;"	d	file:
get_current_sit_page	./fsck/mount.c	/^static struct f2fs_sit_block *get_current_sit_page(struct f2fs_sb_info *sbi,$/;"	f	file:
get_kernel_version	./lib/libf2fs.c	/^void get_kernel_version(__u8 *version)$/;"	f
get_nat_entry	./fsck/mount.c	/^static void get_nat_entry(struct f2fs_sb_info *sbi, nid_t nid,$/;"	f	file:
get_node_info	./fsck/mount.c	/^void get_node_info(struct f2fs_sb_info *sbi, nid_t nid, struct node_info *ni)$/;"	f
get_pid_entry	./tools/f2fs_io_parse.c	/^struct pid_ent *get_pid_entry(int pid)$/;"	f
get_sb	./mkfs/f2fs_format.c	51;"	d	file:
get_sb_le16	./mkfs/f2fs_format.c	39;"	d	file:
get_sb_le32	./mkfs/f2fs_format.c	38;"	d	file:
get_sb_le64	./mkfs/f2fs_format.c	37;"	d	file:
get_seg_entry	./fsck/mount.c	/^struct seg_entry *get_seg_entry(struct f2fs_sb_info *sbi,$/;"	f
get_sum_block	./fsck/mount.c	/^int get_sum_block(struct f2fs_sb_info *sbi, unsigned int segno,$/;"	f
get_sum_entry	./fsck/mount.c	/^int get_sum_entry(struct f2fs_sb_info *sbi, u32 blk_addr,$/;"	f
get_valid_checkpoint	./fsck/mount.c	/^int get_valid_checkpoint(struct f2fs_sb_info *sbi)$/;"	f
gfsck	./fsck/main.c	/^struct f2fs_fsck gfsck;$/;"	v	typeref:struct:f2fs_fsck
handle_tp_ios	./tools/f2fs_io_parse.c	/^static void handle_tp_ios(char *ptr)$/;"	f	file:
handle_tp_pid	./tools/f2fs_io_parse.c	/^static void handle_tp_pid(char *ptr)$/;"	f	file:
hard_link_list_head	./fsck/fsck.h	/^	struct hard_link_node *hard_link_list_head;$/;"	m	struct:f2fs_fsck	typeref:struct:f2fs_fsck::hard_link_node
hard_link_node	./fsck/fsck.h	/^struct hard_link_node {$/;"	s
hash_code	./include/f2fs_fs.h	/^	__le32 hash_code;	\/* hash code of file name *\/$/;"	m	struct:f2fs_dir_entry
heap	./include/f2fs_fs.h	/^	int heap;$/;"	m	struct:f2fs_configuration
i	./include/f2fs_fs.h	/^		struct f2fs_inode i;$/;"	m	union:f2fs_node::__anon4	typeref:struct:f2fs_node::__anon4::f2fs_inode
i_addr	./include/f2fs_fs.h	/^	__le32 i_addr[DEF_ADDRS_PER_INODE];	\/* Pointers to data blocks *\/$/;"	m	struct:f2fs_inode
i_advise	./include/f2fs_fs.h	/^	__u8 i_advise;			\/* file hints *\/$/;"	m	struct:f2fs_inode
i_atime	./include/f2fs_fs.h	/^	__le64 i_atime;			\/* access time *\/$/;"	m	struct:f2fs_inode
i_atime_nsec	./include/f2fs_fs.h	/^	__le32 i_atime_nsec;		\/* access time in nano scale *\/$/;"	m	struct:f2fs_inode
i_blocks	./include/f2fs_fs.h	/^	__le64 i_blocks;		\/* file size in blocks *\/$/;"	m	struct:f2fs_inode
i_ctime	./include/f2fs_fs.h	/^	__le64 i_ctime;			\/* change time *\/$/;"	m	struct:f2fs_inode
i_ctime_nsec	./include/f2fs_fs.h	/^	__le32 i_ctime_nsec;		\/* change time in nano scale *\/$/;"	m	struct:f2fs_inode
i_current_depth	./include/f2fs_fs.h	/^	__le32 i_current_depth;		\/* only for directory depth *\/$/;"	m	struct:f2fs_inode
i_dir_level	./include/f2fs_fs.h	/^	__u8 i_dir_level;		\/* dentry_level for large dir *\/$/;"	m	struct:f2fs_inode
i_ext	./include/f2fs_fs.h	/^	struct f2fs_extent i_ext;	\/* caching a largest extent *\/$/;"	m	struct:f2fs_inode	typeref:struct:f2fs_inode::f2fs_extent
i_flags	./include/f2fs_fs.h	/^	__le32 i_flags;			\/* file attributes *\/$/;"	m	struct:f2fs_inode
i_generation	./include/f2fs_fs.h	/^	__le32 i_generation;		\/* file version (for NFS) *\/$/;"	m	struct:f2fs_inode
i_gid	./include/f2fs_fs.h	/^	__le32 i_gid;			\/* group ID *\/$/;"	m	struct:f2fs_inode
i_inline	./include/f2fs_fs.h	/^	__u8 i_inline;			\/* file inline flags *\/$/;"	m	struct:f2fs_inode
i_links	./include/f2fs_fs.h	/^	__le32 i_links;			\/* links count *\/$/;"	m	struct:f2fs_inode
i_mode	./include/f2fs_fs.h	/^	__le16 i_mode;			\/* file mode *\/$/;"	m	struct:f2fs_inode
i_mtime	./include/f2fs_fs.h	/^	__le64 i_mtime;			\/* modification time *\/$/;"	m	struct:f2fs_inode
i_mtime_nsec	./include/f2fs_fs.h	/^	__le32 i_mtime_nsec;		\/* modification time in nano scale *\/$/;"	m	struct:f2fs_inode
i_name	./include/f2fs_fs.h	/^	__u8 i_name[F2FS_NAME_LEN];	\/* file name for SPOR *\/$/;"	m	struct:f2fs_inode
i_namelen	./include/f2fs_fs.h	/^	__le32 i_namelen;		\/* file name length *\/$/;"	m	struct:f2fs_inode
i_nid	./include/f2fs_fs.h	/^	__le32 i_nid[5];		\/* direct(2), indirect(2),$/;"	m	struct:f2fs_inode
i_pino	./include/f2fs_fs.h	/^	__le32 i_pino;			\/* parent inode number *\/$/;"	m	struct:f2fs_inode
i_size	./include/f2fs_fs.h	/^	__le64 i_size;			\/* file size in bytes *\/$/;"	m	struct:f2fs_inode
i_uid	./include/f2fs_fs.h	/^	__le32 i_uid;			\/* user ID *\/$/;"	m	struct:f2fs_inode
i_xattr_nid	./include/f2fs_fs.h	/^	__le32 i_xattr_nid;		\/* nid to save xattr *\/$/;"	m	struct:f2fs_inode
in	./include/f2fs_fs.h	/^		struct indirect_node in;$/;"	m	union:f2fs_node::__anon4	typeref:struct:f2fs_node::__anon4::indirect_node
indirect_node	./include/f2fs_fs.h	/^struct indirect_node {$/;"	s
init_node_manager	./fsck/mount.c	/^int init_node_manager(struct f2fs_sb_info *sbi)$/;"	f
init_sb_info	./fsck/mount.c	/^int init_sb_info(struct f2fs_sb_info *sbi)$/;"	f
init_scan_nid	./fsck/f2fs.h	/^	nid_t init_scan_nid;$/;"	m	struct:f2fs_nm_info
init_version	./include/f2fs_fs.h	/^	__u8 init_version[VERSION_LEN + 1];$/;"	m	struct:f2fs_configuration
init_version	./include/f2fs_fs.h	/^	__u8 init_version[VERSION_LEN];	\/* the initial kernel version *\/$/;"	m	struct:f2fs_super_block
inline_data_addr	./fsck/f2fs.h	/^static inline void *inline_data_addr(struct f2fs_node *node_blk)$/;"	f
ino	./fsck/f2fs.h	/^	nid_t ino;$/;"	m	struct:node_info
ino	./include/f2fs_fs.h	/^	__le32 ino;		\/* inode number *\/$/;"	m	struct:f2fs_dir_entry
ino	./include/f2fs_fs.h	/^	__le32 ino;		\/* inode number *\/$/;"	m	struct:f2fs_nat_entry
ino	./include/f2fs_fs.h	/^	__le32 ino;		\/* inode nunmber *\/$/;"	m	struct:node_footer
ino	./include/f2fs_fs.h	/^	__le32 ino[F2FS_ORPHANS_PER_BLOCK];	\/* inode numbers *\/$/;"	m	struct:f2fs_orphan_block
ino_list	./fsck/fsck.h	/^	u32 *ino_list;$/;"	m	struct:orphan_info
interval	./tools/f2fstat.c	/^	int interval;$/;"	m	struct:options	file:
io	./tools/f2fs_io_parse.c	/^	unsigned long long io[__NR_FILES][MAX_RW];$/;"	m	struct:pid_ent	file:
is_mounted	./lib/libf2fs.c	/^static int is_mounted(const char *mpt, const char *device)$/;"	f	file:
is_set_ckpt_flags	./fsck/f2fs.h	/^static inline bool is_set_ckpt_flags(struct f2fs_checkpoint *cp, unsigned int f)$/;"	f
is_valid_ssa_data_blk	./fsck/fsck.c	/^static int is_valid_ssa_data_blk(struct f2fs_sb_info *sbi, u32 blk_addr,$/;"	f	file:
is_valid_ssa_node_blk	./fsck/fsck.c	/^static int is_valid_ssa_node_blk(struct f2fs_sb_info *sbi, u32 nid,$/;"	f	file:
kd	./include/f2fs_fs.h	/^	int32_t fd, kd;$/;"	m	struct:f2fs_configuration
last_section	./mkfs/f2fs_format.c	32;"	d	file:
last_valid_block_count	./fsck/f2fs.h	/^	block_t last_valid_block_count;         \/* for recovery *\/$/;"	m	struct:f2fs_sb_info
last_zone	./mkfs/f2fs_format.c	31;"	d	file:
le16_to_cpu	./include/f2fs_fs.h	90;"	d
le16_to_cpu	./include/f2fs_fs.h	97;"	d
le32_to_cpu	./include/f2fs_fs.h	91;"	d
le32_to_cpu	./include/f2fs_fs.h	98;"	d
le64_to_cpu	./include/f2fs_fs.h	92;"	d
le64_to_cpu	./include/f2fs_fs.h	99;"	d
len	./include/f2fs_fs.h	/^	__le32 len;		\/* lengh of the extent *\/$/;"	m	struct:f2fs_extent
lfs_blks	./tools/f2fstat.c	/^unsigned long lfs_blks;$/;"	v
links	./fsck/fsck.h	/^	u32 links;$/;"	m	struct:hard_link_node
list_add	./include/list.h	/^static inline void list_add(struct list_head *new, struct list_head *head)$/;"	f
list_add_tail	./include/list.h	/^static inline void list_add_tail(struct list_head *new, struct list_head *head)$/;"	f
list_del	./include/list.h	/^static inline void list_del(struct list_head *entry)$/;"	f
list_empty	./include/list.h	/^static inline int list_empty(const struct list_head *head)$/;"	f
list_entry	./include/list.h	71;"	d
list_for_each	./include/list.h	74;"	d
list_for_each_entry	./include/list.h	80;"	d
list_for_each_entry_safe	./include/list.h	84;"	d
list_for_each_safe	./include/list.h	77;"	d
list_head	./fsck/f2fs.h	/^struct list_head {$/;"	s
list_head	./include/list.h	/^struct list_head {$/;"	s
log_base_2	./lib/libf2fs.c	/^int log_base_2(u_int32_t num)$/;"	f
log_blocks_per_seg	./fsck/f2fs.h	/^	unsigned int log_blocks_per_seg;        \/* log2 blocks per segment *\/$/;"	m	struct:f2fs_sb_info
log_blocks_per_seg	./include/f2fs_fs.h	/^	__le32 log_blocks_per_seg;	\/* log2 # of blocks per segment *\/$/;"	m	struct:f2fs_super_block
log_blocksize	./fsck/f2fs.h	/^	unsigned int log_blocksize;             \/* log2 block size *\/$/;"	m	struct:f2fs_sb_info
log_blocksize	./include/f2fs_fs.h	/^	__le32 log_blocksize;		\/* log2 block size in bytes *\/$/;"	m	struct:f2fs_super_block
log_sectors_per_block	./fsck/f2fs.h	/^	unsigned int log_sectors_per_block;     \/* log2 sectors per block *\/$/;"	m	struct:f2fs_sb_info
log_sectors_per_block	./include/f2fs_fs.h	/^	__le32 log_sectors_per_block;	\/* log2 # of sectors per block *\/$/;"	m	struct:f2fs_super_block
log_sectorsize	./include/f2fs_fs.h	/^	__le32 log_sectorsize;		\/* log2 sector size in bytes *\/$/;"	m	struct:f2fs_super_block
lookup_nat_in_journal	./fsck/mount.c	/^int lookup_nat_in_journal(struct f2fs_sb_info *sbi, u32 nid,$/;"	f
magic	./include/f2fs_fs.h	/^	__le32 magic;			\/* Magic Number *\/$/;"	m	struct:f2fs_super_block
main	./fsck/main.c	/^int main(int argc, char **argv)$/;"	f
main	./mkfs/f2fs_format_main.c	/^int main(int argc, char *argv[])$/;"	f
main	./tools/f2fs_io_parse.c	/^int main(int argc, char **argv)$/;"	f
main	./tools/f2fstat.c	/^int main(int argc, char *argv[])$/;"	f
main	./tools/fibmap.c	/^int main(int argc, char *argv[])$/;"	f
main_area_bitmap	./fsck/fsck.h	/^	char *main_area_bitmap;$/;"	m	struct:f2fs_fsck
main_area_bitmap_sz	./fsck/fsck.h	/^	u64 main_area_bitmap_sz;$/;"	m	struct:f2fs_fsck
main_blkaddr	./fsck/f2fs.h	/^	block_t main_blkaddr;$/;"	m	struct:f2fs_sm_info
main_blkaddr	./include/f2fs_fs.h	/^	__le32 main_blkaddr;		\/* start block address of main area *\/$/;"	m	struct:f2fs_super_block
main_seg_usage	./fsck/fsck.h	/^	char *main_seg_usage;$/;"	m	struct:f2fs_fsck
main_segments	./fsck/f2fs.h	/^	unsigned int main_segments;$/;"	m	struct:f2fs_sm_info
major	./tools/f2fs_io_parse.c	/^int major = 0, minor = 0;$/;"	v
major_ver	./include/f2fs_fs.h	/^	__le16 major_ver;		\/* Major Version *\/$/;"	m	struct:f2fs_super_block
max_mtime	./fsck/f2fs.h	/^	unsigned long long max_mtime;           \/* max. modification time *\/$/;"	m	struct:sit_info
max_nid	./fsck/f2fs.h	/^	nid_t max_nid;$/;"	m	struct:f2fs_nm_info
media_ext_lists	./mkfs/f2fs_format.c	/^const char *media_ext_lists[] = {$/;"	v
memory_kb	./tools/f2fstat.c	/^unsigned long memory_kb;$/;"	v
meta_ino	./include/f2fs_fs.h	/^	__le32 meta_ino;		\/* meta inode number *\/$/;"	m	struct:f2fs_super_block
meta_ino_num	./fsck/f2fs.h	/^	unsigned int meta_ino_num;              \/* meta inode number*\/$/;"	m	struct:f2fs_sb_info
meta_kb	./tools/f2fstat.c	/^unsigned long dirty_meta, meta_kb;$/;"	v
min_mtime	./fsck/f2fs.h	/^	unsigned long long min_mtime;           \/* min. modification time *\/$/;"	m	struct:sit_info
minor	./tools/f2fs_io_parse.c	/^int major = 0, minor = 0;$/;"	v
minor_ver	./include/f2fs_fs.h	/^	__le16 minor_ver;		\/* Minor Version *\/$/;"	m	struct:f2fs_super_block
mkfs_usage	./mkfs/f2fs_format_main.c	/^static void mkfs_usage()$/;"	f	file:
mm_table	./tools/f2fstat.c	/^struct mm_table {$/;"	s	file:
mounted_time	./fsck/f2fs.h	/^	unsigned long long mounted_time;        \/* mount time *\/$/;"	m	struct:sit_info
mtime	./fsck/f2fs.h	/^	unsigned long long mtime;       \/* modification time of the segment *\/$/;"	m	struct:seg_entry
mtime	./include/f2fs_fs.h	/^	__le64 mtime;				\/* segment age for cleaning *\/$/;"	m	struct:f2fs_sit_entry
multi_hard_link_files	./fsck/fsck.h	/^		u32 multi_hard_link_files;$/;"	m	struct:f2fs_fsck::chk_result
n_nats	./include/f2fs_fs.h	/^		__le16 n_nats;$/;"	m	union:f2fs_summary_block::__anon8
n_orphans	./fsck/f2fs.h	/^	unsigned int n_orphans;$/;"	m	struct:f2fs_sb_info
n_sits	./include/f2fs_fs.h	/^		__le16 n_sits;$/;"	m	union:f2fs_summary_block::__anon8
name	./tools/f2fs_io_parse.c	/^	char name[P_NAMELEN];$/;"	m	struct:pid_ent	file:
name	./tools/f2fs_io_parse.c	/^	const char *name;$/;"	m	struct:tps	file:
name	./tools/f2fstat.c	/^	const char *name;$/;"	m	struct:mm_table	file:
name_len	./include/f2fs_fs.h	/^	__le16 name_len;	\/* lengh of file name *\/$/;"	m	struct:f2fs_dir_entry
nat_area_bitmap	./fsck/fsck.h	/^	char *nat_area_bitmap;$/;"	m	struct:f2fs_fsck
nat_area_bitmap_sz	./fsck/fsck.h	/^	u32 nat_area_bitmap_sz;$/;"	m	struct:f2fs_fsck
nat_bitmap	./fsck/f2fs.h	/^	char *nat_bitmap;$/;"	m	struct:f2fs_nm_info
nat_blkaddr	./fsck/f2fs.h	/^	block_t nat_blkaddr;$/;"	m	struct:f2fs_nm_info
nat_blkaddr	./include/f2fs_fs.h	/^	__le32 nat_blkaddr;		\/* start block address of NAT *\/$/;"	m	struct:f2fs_super_block
nat_caches	./tools/f2fstat.c	/^unsigned long nat_caches;$/;"	v
nat_cnt	./fsck/f2fs.h	/^	unsigned int nat_cnt;$/;"	m	struct:f2fs_nm_info
nat_in_journal	./fsck/f2fs.h	320;"	d
nat_j	./include/f2fs_fs.h	/^		struct nat_journal nat_j;$/;"	m	union:f2fs_summary_block::__anon9	typeref:struct:f2fs_summary_block::__anon9::nat_journal
nat_journal	./include/f2fs_fs.h	/^struct nat_journal {$/;"	s
nat_journal_entry	./include/f2fs_fs.h	/^struct nat_journal_entry {$/;"	s
nat_ver_bitmap_bytesize	./include/f2fs_fs.h	/^	__le32 nat_ver_bitmap_bytesize; \/* Default value 256 *\/$/;"	m	struct:f2fs_checkpoint
nats_in_cursum	./fsck/f2fs.h	317;"	d
ne	./include/f2fs_fs.h	/^	struct f2fs_nat_entry ne;$/;"	m	struct:nat_journal_entry	typeref:struct:nat_journal_entry::f2fs_nat_entry
next	./fsck/f2fs.h	/^	struct list_head *next, *prev;$/;"	m	struct:list_head	typeref:struct:list_head::list_head
next	./fsck/fsck.h	/^	struct hard_link_node *next;$/;"	m	struct:hard_link_node	typeref:struct:hard_link_node::hard_link_node
next	./include/list.h	/^	struct list_head *next, *prev;$/;"	m	struct:list_head	typeref:struct:list_head::list_head
next_blkaddr	./include/f2fs_fs.h	/^	__le32 next_blkaddr;	\/* next node page block address *\/$/;"	m	struct:node_footer
next_blkoff	./fsck/f2fs.h	/^	unsigned short next_blkoff;             \/* next block offset to write *\/$/;"	m	struct:curseg_info
next_free_nid	./include/f2fs_fs.h	/^	__le32 next_free_nid;		\/* Next free node number *\/$/;"	m	struct:f2fs_checkpoint
next_scan_nid	./fsck/f2fs.h	/^	nid_t next_scan_nid;$/;"	m	struct:f2fs_nm_info
next_segno	./fsck/f2fs.h	/^	unsigned int next_segno;                \/* preallocated segment *\/$/;"	m	struct:curseg_info
next_zone	./mkfs/f2fs_format.c	30;"	d	file:
nid	./fsck/f2fs.h	/^	nid_t nid;$/;"	m	struct:node_info
nid	./fsck/fsck.h	/^	nid_t nid;$/;"	m	struct:dump_option
nid	./fsck/fsck.h	/^	u32 nid;$/;"	m	struct:hard_link_node
nid	./include/f2fs_fs.h	/^	__le32 nid;		\/* node id *\/$/;"	m	struct:node_footer
nid	./include/f2fs_fs.h	/^	__le32 nid;		\/* parent node id *\/$/;"	m	struct:f2fs_summary
nid	./include/f2fs_fs.h	/^	__le32 nid;$/;"	m	struct:nat_journal_entry
nid	./include/f2fs_fs.h	/^	__le32 nid[NIDS_PER_BLOCK];	\/* array of data block address *\/$/;"	m	struct:indirect_node
nid_in_journal	./fsck/f2fs.h	321;"	d
nid_t	./include/f2fs_fs.h	/^typedef u32		nid_t;$/;"	t
nm_info	./fsck/f2fs.h	/^	struct f2fs_nm_info *nm_info;$/;"	m	struct:f2fs_sb_info	typeref:struct:f2fs_sb_info::f2fs_nm_info
node_footer	./include/f2fs_fs.h	/^struct node_footer {$/;"	s
node_info	./fsck/f2fs.h	/^struct node_info {$/;"	s
node_info_from_raw_nat	./fsck/f2fs.h	/^static inline void node_info_from_raw_nat(struct node_info *ni,$/;"	f
node_ino	./include/f2fs_fs.h	/^	__le32 node_ino;		\/* node inode number *\/$/;"	m	struct:f2fs_super_block
node_ino_num	./fsck/f2fs.h	/^	unsigned int node_ino_num;              \/* node inode number*\/$/;"	m	struct:f2fs_sb_info
node_kb	./tools/f2fstat.c	/^unsigned long dirty_node, node_kb;$/;"	v
nr_inodes	./fsck/fsck.h	/^	u32 nr_inodes;$/;"	m	struct:orphan_info
nr_main_blks	./fsck/fsck.h	/^	u64 nr_main_blks;$/;"	m	struct:f2fs_fsck
nr_nat_entries	./fsck/fsck.h	/^	u32 nr_nat_entries;$/;"	m	struct:f2fs_fsck
nullify_nat_entry	./fsck/mount.c	/^void nullify_nat_entry(struct f2fs_sb_info *sbi, u32 nid)$/;"	f
offsetof	./include/list.h	7;"	d
ofs_in_node	./include/f2fs_fs.h	/^			__le16 ofs_in_node;	\/* block index in parent node *\/$/;"	m	struct:f2fs_summary::__anon5::__anon6
ofs_of_node	./fsck/f2fs.h	/^static inline unsigned int ofs_of_node(struct f2fs_node *node_blk)$/;"	f
options	./tools/f2fstat.c	/^struct options {$/;"	s	file:
orig_type	./fsck/f2fs.h	/^	unsigned char orig_type;        \/* segment type like CURSEG_XXX_TYPE *\/$/;"	m	struct:seg_entry
orphan_info	./fsck/fsck.h	/^struct orphan_info {$/;"	s
orphan_inode_list	./fsck/f2fs.h	/^	struct list_head orphan_inode_list;$/;"	m	struct:f2fs_sb_info	typeref:struct:f2fs_sb_info::list_head
orphani	./fsck/fsck.h	/^	struct orphan_info orphani;$/;"	m	struct:f2fs_fsck	typeref:struct:f2fs_fsck::orphan_info
overprov_segment_count	./include/f2fs_fs.h	/^	__le32 overprov_segment_count;	\/* # of overprovision segments *\/$/;"	m	struct:f2fs_checkpoint
overprovision	./include/f2fs_fs.h	/^	u_int32_t overprovision;$/;"	m	struct:f2fs_configuration
ovp_segments	./fsck/f2fs.h	/^	unsigned int ovp_segments;$/;"	m	struct:f2fs_sm_info
parse_option	./tools/f2fstat.c	/^void parse_option(int argc, char *argv[], struct options *opt)$/;"	f
parse_options	./tools/f2fs_io_parse.c	/^static int parse_options(int argc, char *argv[])$/;"	f	file:
partname	./tools/f2fstat.c	/^	char partname[32];$/;"	m	struct:options	file:
pgoff_t	./include/f2fs_fs.h	/^typedef unsigned long	pgoff_t;$/;"	t
pid	./tools/f2fs_io_parse.c	/^	int pid;$/;"	m	struct:pid_ent	file:
pid_ent	./tools/f2fs_io_parse.c	/^struct pid_ent {$/;"	s	file:
prefree_segs	./tools/f2fstat.c	/^unsigned long prefree_segs;$/;"	v
prev	./fsck/f2fs.h	/^	struct list_head *next, *prev;$/;"	m	struct:list_head	typeref:struct:list_head::
prev	./include/list.h	/^	struct list_head *next, *prev;$/;"	m	struct:list_head	typeref:struct:list_head::
prev_zone	./mkfs/f2fs_format.c	29;"	d	file:
print_ckpt_info	./fsck/mount.c	/^void print_ckpt_info(struct f2fs_sb_info *sbi)$/;"	f
print_dentry	./fsck/fsck.c	/^static void print_dentry(__u32 depth, __u8 *name,$/;"	f	file:
print_ext	./tools/fibmap.c	/^void print_ext(struct file_ext *ext)$/;"	f
print_head	./tools/f2fstat.c	/^void print_head(char *res)$/;"	f
print_inode_info	./fsck/mount.c	/^void print_inode_info(struct f2fs_inode *inode, int name)$/;"	f
print_node_info	./fsck/mount.c	/^void print_node_info(struct f2fs_node *node_block)$/;"	f
print_raw_sb_info	./fsck/mount.c	/^void print_raw_sb_info(struct f2fs_sb_info *sbi)$/;"	f
print_stat	./tools/fibmap.c	/^void print_stat(struct stat64 *st)$/;"	f
raw_super	./fsck/f2fs.h	/^	struct f2fs_super_block *raw_super;$/;"	m	struct:f2fs_sb_info	typeref:struct:f2fs_sb_info::f2fs_super_block
read_compacted_summaries	./fsck/mount.c	/^static void read_compacted_summaries(struct f2fs_sb_info *sbi)$/;"	f	file:
read_normal_summaries	./fsck/mount.c	/^static void read_normal_summaries(struct f2fs_sb_info *sbi, int type)$/;"	f	file:
remove_newline	./tools/f2fstat.c	/^static inline void remove_newline(char **head)$/;"	f	file:
reserved	./include/f2fs_fs.h	/^		__u8 reserved[3];$/;"	m	union:f2fs_summary::__anon5
reserved	./include/f2fs_fs.h	/^	__le32 reserved;	\/* reserved *\/$/;"	m	struct:f2fs_orphan_block
reserved	./include/f2fs_fs.h	/^	__u8 reserved[INLINE_RESERVED_SIZE];$/;"	m	struct:f2fs_inline_dentry
reserved	./include/f2fs_fs.h	/^	__u8 reserved[NAT_JOURNAL_RESERVED];$/;"	m	struct:nat_journal
reserved	./include/f2fs_fs.h	/^	__u8 reserved[SIT_JOURNAL_RESERVED];$/;"	m	struct:sit_journal
reserved	./include/f2fs_fs.h	/^	__u8 reserved[SIZE_OF_RESERVED];$/;"	m	struct:f2fs_dentry_block
reserved_segments	./fsck/f2fs.h	/^	unsigned int reserved_segments;$/;"	m	struct:f2fs_sm_info
reserved_segments	./include/f2fs_fs.h	/^	u_int32_t reserved_segments;$/;"	m	struct:f2fs_configuration
reset_curseg	./fsck/mount.c	/^void reset_curseg(struct f2fs_sb_info *sbi, int type)$/;"	f
restore_curseg_summaries	./fsck/mount.c	/^static void restore_curseg_summaries(struct f2fs_sb_info *sbi)$/;"	f	file:
restore_node_summary	./fsck/mount.c	/^static void restore_node_summary(struct f2fs_sb_info *sbi,$/;"	f	file:
rewrite_current_sit_page	./fsck/mount.c	/^void rewrite_current_sit_page(struct f2fs_sb_info *sbi,$/;"	f
rewrite_sit_area_bitmap	./fsck/mount.c	/^void rewrite_sit_area_bitmap(struct f2fs_sb_info *sbi)$/;"	f
root_ino	./include/f2fs_fs.h	/^	__le32 root_ino;		\/* root inode number *\/$/;"	m	struct:f2fs_super_block
root_ino_num	./fsck/f2fs.h	/^	unsigned int root_ino_num;              \/* root inode number*\/$/;"	m	struct:f2fs_sb_info
rsvd_segment_count	./include/f2fs_fs.h	/^	__le32 rsvd_segment_count;	\/* # of reserved segments for gc *\/$/;"	m	struct:f2fs_checkpoint
rw_type	./tools/f2fs_io_parse.c	/^enum rw_type {$/;"	g	file:
s_next_generation	./fsck/f2fs.h	/^	u32 s_next_generation;                  \/* for NFS support *\/$/;"	m	struct:f2fs_sb_info
sanity_check_ckpt	./fsck/mount.c	/^int sanity_check_ckpt(struct f2fs_sb_info *sbi)$/;"	f
sanity_check_nid	./fsck/fsck.c	/^static int sanity_check_nid(struct f2fs_sb_info *sbi, u32 nid,$/;"	f	file:
sanity_check_raw_super	./fsck/mount.c	/^int sanity_check_raw_super(struct f2fs_super_block *raw_super)$/;"	f
sb	./mkfs/f2fs_format.c	/^struct f2fs_super_block sb;$/;"	v	typeref:struct:f2fs_super_block
sb_version	./include/f2fs_fs.h	/^	__u8 sb_version[VERSION_LEN + 1];$/;"	m	struct:f2fs_configuration
sbi	./fsck/fsck.h	/^	struct f2fs_sb_info sbi;$/;"	m	struct:f2fs_fsck	typeref:struct:f2fs_fsck::f2fs_sb_info
se	./include/f2fs_fs.h	/^	struct f2fs_sit_entry se;$/;"	m	struct:sit_journal_entry	typeref:struct:sit_journal_entry::f2fs_sit_entry
sec_entries	./fsck/f2fs.h	/^	struct sec_entry *sec_entries;          \/* SIT section-level cache *\/$/;"	m	struct:sit_info	typeref:struct:sit_info::sec_entry
sec_entry	./fsck/f2fs.h	/^struct sec_entry {$/;"	s
secs_per_zone	./fsck/f2fs.h	/^	unsigned int secs_per_zone;             \/* sections per zone *\/$/;"	m	struct:f2fs_sb_info
secs_per_zone	./include/f2fs_fs.h	/^	__le32 secs_per_zone;		\/* # of sections per zone *\/$/;"	m	struct:f2fs_super_block
secs_per_zone	./include/f2fs_fs.h	/^	u_int32_t secs_per_zone;$/;"	m	struct:f2fs_configuration
section_count	./include/f2fs_fs.h	/^	__le32 section_count;		\/* total # of sections *\/$/;"	m	struct:f2fs_super_block
sector_size	./include/f2fs_fs.h	/^	u_int32_t sector_size;$/;"	m	struct:f2fs_configuration
sectors_per_blk	./include/f2fs_fs.h	/^	u_int32_t sectors_per_blk;$/;"	m	struct:f2fs_configuration
seg0_blkaddr	./fsck/f2fs.h	/^	block_t seg0_blkaddr;$/;"	m	struct:f2fs_sm_info
seg_entry	./fsck/f2fs.h	/^struct seg_entry {$/;"	s
seg_info_from_raw_sit	./fsck/mount.c	/^void seg_info_from_raw_sit(struct seg_entry *se,$/;"	f
seg_type	./fsck/fsck.h	/^enum seg_type {$/;"	g
seg_type_name	./fsck/dump.c	/^const char *seg_type_name[SEG_TYPE_MAX] = {$/;"	v
segment0_blkaddr	./include/f2fs_fs.h	/^	__le32 segment0_blkaddr;	\/* start block address of segment 0 *\/$/;"	m	struct:f2fs_super_block
segment_count	./fsck/f2fs.h	/^	unsigned int segment_count;$/;"	m	struct:f2fs_sm_info
segment_count	./include/f2fs_fs.h	/^	__le32 segment_count;		\/* total # of segments *\/$/;"	m	struct:f2fs_super_block
segment_count_ckpt	./include/f2fs_fs.h	/^	__le32 segment_count_ckpt;	\/* # of segments for checkpoint *\/$/;"	m	struct:f2fs_super_block
segment_count_main	./include/f2fs_fs.h	/^	__le32 segment_count_main;	\/* # of segments for main area *\/$/;"	m	struct:f2fs_super_block
segment_count_nat	./include/f2fs_fs.h	/^	__le32 segment_count_nat;	\/* # of segments for NAT *\/$/;"	m	struct:f2fs_super_block
segment_count_sit	./include/f2fs_fs.h	/^	__le32 segment_count_sit;	\/* # of segments for SIT *\/$/;"	m	struct:f2fs_super_block
segment_count_ssa	./include/f2fs_fs.h	/^	__le32 segment_count_ssa;	\/* # of segments for SSA *\/$/;"	m	struct:f2fs_super_block
segno	./fsck/f2fs.h	/^	unsigned int segno;                     \/* current segment number *\/$/;"	m	struct:curseg_info
segno	./include/f2fs_fs.h	/^	__le32 segno;$/;"	m	struct:sit_journal_entry
segno_in_journal	./fsck/f2fs.h	323;"	d
segs_per_sec	./fsck/f2fs.h	/^	unsigned int segs_per_sec;              \/* segments per section *\/$/;"	m	struct:f2fs_sb_info
segs_per_sec	./include/f2fs_fs.h	/^	__le32 segs_per_sec;		\/* # of segments per section *\/$/;"	m	struct:f2fs_super_block
segs_per_sec	./include/f2fs_fs.h	/^	u_int32_t segs_per_sec;$/;"	m	struct:f2fs_configuration
segs_per_zone	./include/f2fs_fs.h	/^	u_int32_t segs_per_zone;$/;"	m	struct:f2fs_configuration
sentries	./fsck/f2fs.h	/^	struct seg_entry *sentries;             \/* SIT segment-level cache *\/$/;"	m	struct:sit_info	typeref:struct:sit_info::seg_entry
sents_per_block	./fsck/f2fs.h	/^	unsigned int sents_per_block;           \/* # of SIT entries per block *\/$/;"	m	struct:sit_info
set_bit	./lib/libf2fs.c	/^int set_bit(unsigned int nr,void * addr)$/;"	f
set_cp	./mkfs/f2fs_format.c	69;"	d	file:
set_cp_le16	./mkfs/f2fs_format.c	64;"	d	file:
set_cp_le32	./mkfs/f2fs_format.c	63;"	d	file:
set_cp_le64	./mkfs/f2fs_format.c	62;"	d	file:
set_sb	./mkfs/f2fs_format.c	41;"	d	file:
set_sb_le16	./mkfs/f2fs_format.c	36;"	d	file:
set_sb_le32	./mkfs/f2fs_format.c	35;"	d	file:
set_sb_le64	./mkfs/f2fs_format.c	34;"	d	file:
show_option	./tools/f2fs_io_parse.c	/^int show_option = SHOW_ALL;$/;"	v
show_type	./tools/f2fs_io_parse.c	/^enum show_type {$/;"	g	file:
show_usage	./tools/f2fs_io_parse.c	/^void show_usage()$/;"	f
sit_area_bitmap	./fsck/fsck.h	/^	char *sit_area_bitmap;$/;"	m	struct:f2fs_fsck
sit_area_bitmap_sz	./fsck/fsck.h	/^	u32 sit_area_bitmap_sz;$/;"	m	struct:f2fs_fsck
sit_base_addr	./fsck/f2fs.h	/^	block_t sit_base_addr;          \/* start block address of SIT area *\/$/;"	m	struct:sit_info
sit_bitmap	./fsck/f2fs.h	/^	char *sit_bitmap;               \/* SIT bitmap pointer *\/$/;"	m	struct:sit_info
sit_blkaddr	./include/f2fs_fs.h	/^	__le32 sit_blkaddr;		\/* start block address of SIT *\/$/;"	m	struct:f2fs_super_block
sit_blocks	./fsck/f2fs.h	/^	block_t sit_blocks;             \/* # of blocks used by SIT area *\/$/;"	m	struct:sit_info
sit_dump	./fsck/dump.c	/^void sit_dump(struct f2fs_sb_info *sbi, int start_sit, int end_sit)$/;"	f
sit_free_segs	./fsck/fsck.h	/^		u32 sit_free_segs;$/;"	m	struct:f2fs_fsck::chk_result
sit_in_journal	./fsck/f2fs.h	322;"	d
sit_info	./fsck/f2fs.h	/^	struct sit_info *sit_info;$/;"	m	struct:f2fs_sm_info	typeref:struct:f2fs_sm_info::sit_info
sit_info	./fsck/f2fs.h	/^struct sit_info {$/;"	s
sit_j	./include/f2fs_fs.h	/^		struct sit_journal sit_j;$/;"	m	union:f2fs_summary_block::__anon9	typeref:struct:f2fs_summary_block::__anon9::sit_journal
sit_journal	./include/f2fs_fs.h	/^struct sit_journal {$/;"	s
sit_journal_entry	./include/f2fs_fs.h	/^struct sit_journal_entry {$/;"	s
sit_nat_version_bitmap	./include/f2fs_fs.h	/^	unsigned char sit_nat_version_bitmap[1];$/;"	m	struct:f2fs_checkpoint
sit_valid_blocks	./fsck/fsck.h	/^		u64 sit_valid_blocks;$/;"	m	struct:f2fs_fsck::chk_result
sit_ver_bitmap_bytesize	./include/f2fs_fs.h	/^	__le32 sit_ver_bitmap_bytesize;	\/* Default value 64 *\/$/;"	m	struct:f2fs_checkpoint
sits_in_cursum	./fsck/f2fs.h	318;"	d
sm_info	./fsck/f2fs.h	/^	struct f2fs_sm_info *sm_info;$/;"	m	struct:f2fs_sb_info	typeref:struct:f2fs_sb_info::f2fs_sm_info
ssa_blkaddr	./fsck/f2fs.h	/^	block_t ssa_blkaddr;$/;"	m	struct:f2fs_sm_info
ssa_blkaddr	./include/f2fs_fs.h	/^	__le32 ssa_blkaddr;		\/* start block address of SSA *\/$/;"	m	struct:f2fs_super_block
ssa_dump	./fsck/dump.c	/^void ssa_dump(struct f2fs_sb_info *sbi, int start_ssa, int end_ssa)$/;"	f
ssr_blks	./tools/f2fstat.c	/^unsigned long ssr_blks;$/;"	v
start_blk	./tools/fibmap.c	/^	__u32 start_blk;$/;"	m	struct:file_ext	file:
start_sector	./include/f2fs_fs.h	/^	u_int32_t start_sector;$/;"	m	struct:f2fs_configuration
start_sit	./fsck/fsck.h	/^	int start_sit;$/;"	m	struct:dump_option
start_ssa	./fsck/fsck.h	/^	int start_ssa;$/;"	m	struct:dump_option
start_sum_block	./fsck/f2fs.h	/^static inline block_t start_sum_block(struct f2fs_sb_info *sbi)$/;"	f
stat_bdev	./tools/fibmap.c	/^void stat_bdev(struct stat64 *st, unsigned int *start_lba)$/;"	f
str2hashbuf	./lib/libf2fs.c	/^static void str2hashbuf(const unsigned char *msg, int len,$/;"	f	file:
sum_blk	./fsck/f2fs.h	/^	struct f2fs_summary_block *sum_blk;     \/* cached summary block *\/$/;"	m	struct:curseg_info	typeref:struct:curseg_info::f2fs_summary_block
sum_blk_addr	./fsck/f2fs.h	/^static inline block_t sum_blk_addr(struct f2fs_sb_info *sbi, int base, int type)$/;"	f
summary_footer	./include/f2fs_fs.h	/^struct summary_footer {$/;"	s
test_bit	./lib/libf2fs.c	/^int test_bit(unsigned int nr, const void * addr)$/;"	f
total_io	./tools/f2fs_io_parse.c	/^	unsigned long long total_io[MAX_RW];$/;"	m	struct:pid_ent	file:
total_io	./tools/f2fs_io_parse.c	/^unsigned long long total_io[__NR_FILES][MAX_RW];$/;"	v
total_node_count	./fsck/f2fs.h	/^	unsigned int total_node_count;          \/* total node block count *\/$/;"	m	struct:f2fs_sb_info
total_sections	./fsck/f2fs.h	/^	unsigned int total_sections;            \/* total section count *\/$/;"	m	struct:f2fs_sb_info
total_sectors	./include/f2fs_fs.h	/^	u_int64_t total_sectors;$/;"	m	struct:f2fs_configuration
total_valid_block_count	./fsck/f2fs.h	/^	block_t total_valid_block_count;        \/* # of valid blocks *\/$/;"	m	struct:f2fs_sb_info
total_valid_inode_count	./fsck/f2fs.h	/^	unsigned int total_valid_inode_count;   \/* valid inode count *\/$/;"	m	struct:f2fs_sb_info
total_valid_node_count	./fsck/f2fs.h	/^	unsigned int total_valid_node_count;    \/* valid node block count *\/$/;"	m	struct:f2fs_sb_info
tps	./tools/f2fs_io_parse.c	/^struct tps {$/;"	s	file:
trace_points	./tools/f2fs_io_parse.c	/^struct tps trace_points[] = {$/;"	v	typeref:struct:tps
trace_types	./tools/f2fs_io_parse.c	/^enum trace_types {$/;"	g	file:
tree_mark	./fsck/fsck.c	/^char *tree_mark;$/;"	v
tree_mark_size	./fsck/fsck.c	/^uint32_t tree_mark_size = 256;$/;"	v
trim	./include/f2fs_fs.h	/^	int trim;$/;"	m	struct:f2fs_configuration
type	./fsck/f2fs.h	/^	unsigned char type;             \/* segment type like CURSEG_XXX_TYPE *\/$/;"	m	struct:seg_entry
type	./tools/f2fs_io_parse.c	/^	enum trace_types type;$/;"	m	struct:tps	typeref:enum:tps::trace_types	file:
typecheck	./include/f2fs_fs.h	105;"	d
u16	./include/f2fs_fs.h	/^typedef u_int16_t	u16;$/;"	t
u32	./include/f2fs_fs.h	/^typedef u_int32_t	u32;$/;"	t
u64	./include/f2fs_fs.h	/^typedef u_int64_t	u64;$/;"	t
u8	./include/f2fs_fs.h	/^typedef u_int8_t	u8;$/;"	t
usage	./tools/f2fstat.c	/^void usage(void)$/;"	f
used_data_blks	./tools/f2fstat.c	/^unsigned long used_data_blks;$/;"	v
used_node_blks	./tools/f2fstat.c	/^unsigned long used_node_blks;$/;"	v
user_block_count	./fsck/f2fs.h	/^	block_t user_block_count;               \/* # of user blocks *\/$/;"	m	struct:f2fs_sb_info
user_block_count	./include/f2fs_fs.h	/^	__le64 user_block_count;	\/* # of user blocks *\/$/;"	m	struct:f2fs_checkpoint
util	./tools/f2fstat.c	/^unsigned long util;$/;"	v
uuid	./include/f2fs_fs.h	/^	__u8 uuid[16];			\/* 128-bit uuid for volume *\/$/;"	m	struct:f2fs_super_block
val	./tools/f2fstat.c	/^	unsigned long *val;$/;"	m	struct:mm_table	file:
valid_blk_cnt	./fsck/fsck.h	/^		u64 valid_blk_cnt;$/;"	m	struct:f2fs_fsck::chk_result
valid_block_count	./include/f2fs_fs.h	/^	__le64 valid_block_count;	\/* # of valid blocks in main area *\/$/;"	m	struct:f2fs_checkpoint
valid_blocks	./fsck/f2fs.h	/^	unsigned int valid_blocks;      \/* # of valid blocks in a section *\/$/;"	m	struct:sec_entry
valid_blocks	./fsck/f2fs.h	/^	unsigned short valid_blocks;    \/* # of valid blocks *\/$/;"	m	struct:seg_entry
valid_inode_cnt	./fsck/fsck.h	/^		u32 valid_inode_cnt;$/;"	m	struct:f2fs_fsck::chk_result
valid_inode_count	./include/f2fs_fs.h	/^	__le32 valid_inode_count;	\/* Total number of valid inodes *\/$/;"	m	struct:f2fs_checkpoint
valid_map	./include/f2fs_fs.h	/^	__u8 valid_map[SIT_VBLOCK_MAP_SIZE];	\/* bitmap for valid blocks *\/$/;"	m	struct:f2fs_sit_entry
valid_nat_entry_cnt	./fsck/fsck.h	/^		u32 valid_nat_entry_cnt;$/;"	m	struct:f2fs_fsck::chk_result
valid_node_cnt	./fsck/fsck.h	/^		u32 valid_node_cnt;$/;"	m	struct:f2fs_fsck::chk_result
valid_node_count	./include/f2fs_fs.h	/^	__le32 valid_node_count;	\/* Total number of valid nodes *\/$/;"	m	struct:f2fs_checkpoint
valid_segs	./tools/f2fstat.c	/^unsigned long valid_segs;$/;"	v
validate_checkpoint	./fsck/mount.c	/^void *validate_checkpoint(struct f2fs_sb_info *sbi, block_t cp_addr,$/;"	f
validate_super_block	./fsck/mount.c	/^int validate_super_block(struct f2fs_sb_info *sbi, int block)$/;"	f
vblocks	./include/f2fs_fs.h	/^	__le16 vblocks;				\/* reference above *\/$/;"	m	struct:f2fs_sit_entry
ver_after	./fsck/f2fs.h	32;"	d
version	./fsck/f2fs.h	/^	unsigned char version;$/;"	m	struct:node_info
version	./include/f2fs_fs.h	/^			__u8 version;		\/* node version number *\/$/;"	m	struct:f2fs_summary::__anon5::__anon6
version	./include/f2fs_fs.h	/^	__u8 version;		\/* latest version of cached nat entry *\/$/;"	m	struct:f2fs_nat_entry
version	./include/f2fs_fs.h	/^	__u8 version[VERSION_LEN + 1];$/;"	m	struct:f2fs_configuration
version	./include/f2fs_fs.h	/^	__u8 version[VERSION_LEN];	\/* the kernel version *\/$/;"	m	struct:f2fs_super_block
vol_label	./include/f2fs_fs.h	/^	char *vol_label;$/;"	m	struct:f2fs_configuration
volume_name	./include/f2fs_fs.h	/^	__le16 volume_name[512];	\/* volume name *\/$/;"	m	struct:f2fs_super_block
written_valid_blocks	./fsck/f2fs.h	/^	block_t written_valid_blocks;   \/* # of valid blocks in main area *\/$/;"	m	struct:sit_info
zone	./fsck/f2fs.h	/^	unsigned int zone;                      \/* current zone number *\/$/;"	m	struct:curseg_info
